package Vue;

import Controle.modele.ModeleLigneTicketCaisse;
import Controle.modele.ModeleProduit;
import Controle.modele.ModeleTicketCaisse;
import Controle.modele.RendererGras;
import Controle.modele.RendererNombre;
import Controle.modele.RendererPrix;
import Controle.modele.RendererTauxTVA;
import Modele.Client;
import Modele.Employe;
import Modele.LigneTicketCaisse;
import Modele.Produit;
import Modele.TicketCaisse;
import java.math.BigDecimal;
import java.math.RoundingMode;
import java.sql.Timestamp;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.JOptionPane;

public class Fenetre_Vente extends javax.swing.JFrame {

    private final Fenetre_Gestion FenetreG;
    private final SimpleDateFormat format = new SimpleDateFormat("dd/MM/yyyy (HH:mm:ss)");
    private final ModeleTicketCaisse leModeleTicketCaisse;
    private final ModeleLigneTicketCaisse leModeleTemporaireLigneTicketCaisse = new ModeleLigneTicketCaisse(new TicketCaisse());
    private final ModeleProduit leModeleProduit;
    private final ArrayList<Client> listeClients;
    private final Employe lEmploye;
    private final Timestamp date_ticket = new Timestamp(System.currentTimeMillis());
    private BigDecimal montantTotal;
           
    public Fenetre_Vente(Fenetre_Gestion FenetreG, Employe lEmploye) {
        initComponents();

        this.FenetreG = FenetreG;
        
        this.leModeleTicketCaisse = FenetreG.leModeleTicketCaisse;
        this.leModeleProduit = FenetreG.leModeleProduit; 
        this.listeClients = FenetreG.leModeleClient.getInstanceClient().getListeClientsTriee();
        this.lEmploye = lEmploye;     
        this.jTable_Produits.setModel(this.leModeleProduit);
        
        jTable_Produits.getColumnModel().getColumn(1).setCellRenderer(new RendererGras());
        jTable_Produits.getColumnModel().getColumn(3).setCellRenderer(new RendererPrix());
        jTable_Produits.getColumnModel().getColumn(4).setCellRenderer(new RendererTauxTVA());
        jTable_Produits.getColumnModel().getColumn(5).setCellRenderer(new RendererNombre());
        leModeleProduit.addTableModelListener(jTable_Produits);
        
        jTable_Ventes.getColumnModel().getColumn(0).setCellRenderer(new RendererNombre());
        jTable_Ventes.getColumnModel().getColumn(1).setCellRenderer(new RendererGras());
        jTable_Ventes.getColumnModel().getColumn(2).setCellRenderer(new RendererPrix());
        jTable_Ventes.getColumnModel().getColumn(3).setCellRenderer(new RendererPrix());
        leModeleTemporaireLigneTicketCaisse.addTableModelListener(jTable_Ventes);
        
        // On remplit la comboBox Clients et Employes avec les données de l'arraylist
        chargerPersonnes();
        
        // Formattage de la date (avec heures, minutes, secondes) d'aujourd'hui        
        jLabel_DateToday.setText(format.format(date_ticket));
        
        totalMiseAJour();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel_Vente = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel_Client = new javax.swing.JLabel();
        jComboBox_Clients = new javax.swing.JComboBox<>();
        jLabel_Date = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable_Produits = new javax.swing.JTable();
        jButton_Ajouter = new javax.swing.JButton();
        jButton_Retirer = new javax.swing.JButton();
        jLabel_DateToday = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable_Ventes = new javax.swing.JTable();
        jButton_Enregistrer = new javax.swing.JButton();
        jTextField_Total = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jButton_Annuler = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Vente de produits");
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel_Vente.setBackground(new java.awt.Color(255, 255, 255));
        jPanel_Vente.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 48)); // NOI18N
        jLabel1.setText("Vente");
        jPanel_Vente.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 10, 160, 70));

        jLabel_Client.setText("Client : ");
        jPanel_Vente.add(jLabel_Client, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 130, 60, -1));

        jPanel_Vente.add(jComboBox_Clients, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 127, 380, -1));

        jLabel_Date.setText("Date : ");
        jPanel_Vente.add(jLabel_Date, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 100, -1, -1));

        jScrollPane2.setViewportView(jTable_Produits);
        jTable_Produits.setRowHeight(jTable_Produits.getRowHeight() + 5);

        jPanel_Vente.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, 900, 170));

        jButton_Ajouter.setText("Ajouter");
        jButton_Ajouter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jButton_AjouterMouseReleased(evt);
            }
        });
        jPanel_Vente.add(jButton_Ajouter, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 410, 200, 40));

        jButton_Retirer.setText("Retirer");
        jButton_Retirer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jButton_RetirerMouseReleased(evt);
            }
        });
        jPanel_Vente.add(jButton_Retirer, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 620, 200, 40));
        jPanel_Vente.add(jLabel_DateToday, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 100, 230, 20));

        jTable_Ventes.setModel(leModeleTemporaireLigneTicketCaisse);
        jScrollPane3.setViewportView(jTable_Ventes);

        jPanel_Vente.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 470, 900, 140));

        jButton_Enregistrer.setFont(new java.awt.Font("Lucida Grande", 0, 12)); // NOI18N
        jButton_Enregistrer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Icon_client/statut_on.png"))); // NOI18N
        jButton_Enregistrer.setText(" Passage à la caisse");
        jButton_Enregistrer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jButton_EnregistrerMouseReleased(evt);
            }
        });
        jPanel_Vente.add(jButton_Enregistrer, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 670, 240, 60));

        jTextField_Total.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jTextField_Total.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField_Total.setEnabled(false);
        jPanel_Vente.add(jTextField_Total, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 622, 180, 30));
        jTextField_Total.setEditable(false);

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel2.setText("TOTAL :");
        jPanel_Vente.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 622, -1, 30));

        jButton_Annuler.setFont(new java.awt.Font("Lucida Grande", 0, 12)); // NOI18N
        jButton_Annuler.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Icon_client/statut_off.png"))); // NOI18N
        jButton_Annuler.setText(" Annuler");
        jButton_Annuler.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jButton_AnnulerMouseReleased(evt);
            }
        });
        jPanel_Vente.add(jButton_Annuler, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 670, 120, 50));

        getContentPane().add(jPanel_Vente, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 950, 760));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_AjouterMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_AjouterMouseReleased
        if (jTable_Produits.getSelectedRow() != -1){
            int ligne = jTable_Produits.getSelectedRow();
            String qt = JOptionPane.showInputDialog("Quantité à ajouter", 1);
            if (qt == null) return;
            try 
            {
                int quantite = Integer.parseInt(qt);
                Produit leProduit = leModeleProduit.getLesDonnees().get(ligne);
                ajouterProduitAuPanier(leProduit, quantite);   
            } 
            catch (NumberFormatException e)
            {
                JOptionPane.showMessageDialog(null, "Valeur incorrecte !", "Erreur", JOptionPane.INFORMATION_MESSAGE);
            }                
        }
    }//GEN-LAST:event_jButton_AjouterMouseReleased
    
    private void ajouterProduitAuPanier (Produit leProduit, int quantite){       
        boolean dejaAjouter = false;
        if (quantite > 0 && quantite <= leProduit.getQuantite_produit()) 
        {           
            for (LigneTicketCaisse ltc : leModeleTemporaireLigneTicketCaisse.getLesDonnees()) {
                if (ltc.getLeProduit().equals(leProduit)){
                    if (ltc.getQuantiteAchetee()+quantite <= leProduit.getQuantite_produit()){
                        ltc.setQuantiteAchetee(ltc.getQuantiteAchetee()+quantite);
                        leModeleTemporaireLigneTicketCaisse.fireTableDataChanged();
                        totalMiseAJour();
                    }
                    else {
                        JOptionPane.showMessageDialog(null, "Quantité indisponible !", "Erreur", JOptionPane.INFORMATION_MESSAGE);                       
                    }
                    dejaAjouter = true;
                }   
            }

            if (!dejaAjouter){
                LigneTicketCaisse ltc = new LigneTicketCaisse();
                ltc.setQuantiteAchetee(quantite);
                ltc.setLeProduit(leProduit);
                BigDecimal resultat = new BigDecimal(leProduit.getPrix()).multiply(new BigDecimal(1 + leProduit.getTaux_tva()));
                resultat = resultat.setScale(2, RoundingMode.HALF_EVEN);
                ltc.setPrixUnitaire(resultat); 

                leModeleTemporaireLigneTicketCaisse.ajouterLigneTicketCaisse(ltc);

                totalMiseAJour();         
            }                       
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Quantité indisponible ou incorrecte !", "Erreur", JOptionPane.INFORMATION_MESSAGE);
        }       
    }
     
    private void jButton_RetirerMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_RetirerMouseReleased
        if (jTable_Ventes.getSelectedRow() != -1){
            int ligne = jTable_Ventes.getSelectedRow();
            String defaultQt = String.valueOf(leModeleTemporaireLigneTicketCaisse.getLesDonnees().get(ligne).getQuantiteAchetee());
            String qt = JOptionPane.showInputDialog("Quantité à supprimer", defaultQt);
            if (qt == null) return;
            try {
                int quantite = Integer.parseInt(qt);
                leModeleTemporaireLigneTicketCaisse.retirerLigneTicketCaisse(ligne, quantite);
                totalMiseAJour();
            } catch (NumberFormatException e){
                JOptionPane.showMessageDialog(null, "Valeur incorrecte !", "Erreur", JOptionPane.INFORMATION_MESSAGE);
            }   
        }
    }//GEN-LAST:event_jButton_RetirerMouseReleased

    private void jButton_EnregistrerMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_EnregistrerMouseReleased
        enregistrer();
    }//GEN-LAST:event_jButton_EnregistrerMouseReleased

    private void jButton_AnnulerMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_AnnulerMouseReleased
        this.dispose();
    }//GEN-LAST:event_jButton_AnnulerMouseReleased

    private void enregistrer(){
        if (jTable_Ventes.getRowCount() > 0)
        {
            int indexClient = jComboBox_Clients.getSelectedIndex();
            
            Client leClient = listeClients.get(indexClient);           
            TicketCaisse ticketCaisse = new TicketCaisse();
            
            ticketCaisse.setLeClient(leClient);
            ticketCaisse.setlEmploye(this.lEmploye);
            ticketCaisse.setDateDeCreation(date_ticket);
            ticketCaisse.setStatutPaye(false);
            
            // Insertion du ticket d'abord
            // Le ticket se verra attribué un id
            leModeleTicketCaisse.creerMOD(ticketCaisse);          
            
            // Ensuite on insère les lignes de ticket du modèle temporaire au modèle original
            for (LigneTicketCaisse ligneTicketCaisse : leModeleTemporaireLigneTicketCaisse.getLesDonnees()) {                
                ligneTicketCaisse.setId_ticket_caisse(ticketCaisse.getId());
                leModeleTicketCaisse.getLesDonnees().get(0).creerCRUD(ligneTicketCaisse);
            }          

            int indexRow = this.FenetreG.leModeleTicketCaisse.getRowByCode(ticketCaisse.getId());
            
            this.FenetreG.changerSection("tickets");
            this.FenetreG.jTable_Tickets.setRowSelectionInterval(indexRow, indexRow);
            this.FenetreG.afficherLignesTicketCaisse();
            this.dispose();           
        }
        else 
        {
            JOptionPane.showMessageDialog(null, "Le ticket ne contient aucun ligne.", "Information", JOptionPane.PLAIN_MESSAGE);
        }
    }

    private void totalMiseAJour(){

        montantTotal = new BigDecimal(0.0);
        
        for (LigneTicketCaisse ltc : leModeleTemporaireLigneTicketCaisse.getLesDonnees()) 
        {
            montantTotal = montantTotal.add(ltc.getPrixUnitaire().multiply(new BigDecimal(ltc.getQuantiteAchetee())));
        }
        
        jTextField_Total.setText(String.valueOf(this.montantTotal) + " €");
    }
    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(Fenetre_Vente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(Fenetre_Vente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(Fenetre_Vente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(Fenetre_Vente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Fenetre_Vente(leModeleProduit).setVisible(true);
//            }
//        });
//    }
    
    private void chargerPersonnes(){   
        String nom, prenom;
        for (Client leClient : listeClients) {
            // Si les champs sont nulls, on les remplace par un string vide
            nom = leClient.getNom() == null ? "" : leClient.getNom();
            prenom = leClient.getPrenom() == null ? "" : leClient.getPrenom();
            jComboBox_Clients.addItem(nom + " " + prenom);
        }
        
        jComboBox_Clients.setSelectedIndex(0);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_Ajouter;
    private javax.swing.JButton jButton_Annuler;
    private javax.swing.JButton jButton_Enregistrer;
    private javax.swing.JButton jButton_Retirer;
    private javax.swing.JComboBox<String> jComboBox_Clients;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel_Client;
    private javax.swing.JLabel jLabel_Date;
    private javax.swing.JLabel jLabel_DateToday;
    private javax.swing.JPanel jPanel_Vente;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable_Produits;
    private javax.swing.JTable jTable_Ventes;
    private javax.swing.JTextField jTextField_Total;
    // End of variables declaration//GEN-END:variables
}
