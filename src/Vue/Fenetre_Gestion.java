package Vue;

import Controle.ControleConnexionSingleton;
import Controle.modele.ModeleClient;
import Controle.modele.ModeleEmploye;
import Controle.modele.ModeleLigneTicketCaisse;
import Controle.modele.ModeleLocalite;
import Controle.modele.ModeleModePaiement;
import Controle.modele.ModelePays;
import Controle.modele.ModelePoste;
import Controle.modele.ModeleProduit;
import Controle.modele.ModeleTicketCaisse;
import Controle.modele.RendererBooleen;
import Controle.modele.RendererDate;
import Controle.modele.RendererGras;
import Controle.modele.RendererNombre;
import Controle.modele.RendererPrix;
import Controle.modele.RendererPrixMontantRestant;
import Controle.modele.RendererStatutPaiement;
import Controle.modele.RendererTauxTVA;
import Controle.utili.GestionsDates;
import Controle.utili.Regex;
import Fichier.Generateur_PDF;
import Modele.Adresse;
import Modele.Client;
import Modele.Employe;
import Modele.ModePaiement;
import Modele.Paiement;
import Modele.Poste;
import Modele.Produit;
import Modele.TicketCaisse;
import Modele.Utilisateur;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.math.BigDecimal;
import java.math.RoundingMode;
import java.text.ParseException;
import java.util.Date;
import java.util.logging.Logger;
import java.util.logging.Level;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import java.sql.Timestamp;
import javax.swing.JComboBox;
import javax.swing.JTable;
import javax.swing.JTextField;

public class Fenetre_Gestion extends javax.swing.JFrame {
    
    Fenetre_Vente fenetre_Vente;
    Fenetre_ChiffresVentes fenetre_ChiffresVentes;
    Fenetre_Parametres fenetre_Parametres;
    ModeleClient leModeleClient = new ModeleClient();
    ModeleEmploye leModeleEmploye = new ModeleEmploye();
    ModeleProduit leModeleProduit = new ModeleProduit();
    ModeleTicketCaisse leModeleTicketCaisse = new ModeleTicketCaisse();
    ModeleLigneTicketCaisse leModeleLigneTicketCaisse = new ModeleLigneTicketCaisse();
    private final ModeleLocalite leModeleLocalite = new ModeleLocalite();
    private final ModelePays leModelePays = new ModelePays();
    private final ModelePoste leModelePoste = new ModelePoste();
    private final ModeleModePaiement leModeleModePaiement = new ModeleModePaiement();
    private final Utilisateur utilisateur = ControleConnexionSingleton.getUser();
    private boolean ajout = false, modif = false, supp = false;
    
    // Mode correspondant aux sections où l'on se trouve
    // 'C' pour Clients
    // 'E' pour Employés
    // 'P' pour Produits
    // 'T' pour Tickets de Caisse
    // On l'initialise à C car la section Clients est la section initialement affichée
    private char mode = 'C';
    

    public Fenetre_Gestion() {
        initComponents();
        
        // On applique des renderer aux colonnes des tables
        renderTables();
        
        // On va modifier l'interface en fonction des droits de l'utilisateur
        initInterfaceUser();
        
        // Ajout de listeners aux jTextFields des formulaires
        ajoutListenerJTextFields();   
        
        // Ajout de listeners aux labels sur la gauche
        // Permet de naviguer entre les différentes sections
        ajoutListenerJLabels();
        
        // Ajout de listeners aux tableaux
        ajoutListenerJTables();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLab_Titre = new javax.swing.JLabel();
        jBtn_Quitter = new javax.swing.JButton();
        jBtn_Parametres = new javax.swing.JButton();
        jBtn_Enregistrer = new javax.swing.JButton();
        jPanel_Etat = new javax.swing.JPanel();
        jLab_Etat = new javax.swing.JLabel();
        jPanel_Side = new javax.swing.JPanel();
        jPanel_Clients = new javax.swing.JPanel();
        jLab_Clients = new javax.swing.JLabel();
        jPanel_Employes = new javax.swing.JPanel();
        jLab_Employes = new javax.swing.JLabel();
        jPanel_Produits = new javax.swing.JPanel();
        jLab_Produits = new javax.swing.JLabel();
        jPanel_Tickets = new javax.swing.JPanel();
        jLab_Tickets = new javax.swing.JLabel();
        jSeparator_Panels = new javax.swing.JSeparator();
        jLabel_Profil = new javax.swing.JLabel();
        jBtn_Vendre = new javax.swing.JButton();
        jButton_ChiffresVentes = new javax.swing.JButton();
        jPanel_Recherche = new javax.swing.JPanel();
        jTXT_Recherche = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jPanel_AMS = new javax.swing.JPanel();
        jBtn_Ajouter = new javax.swing.JButton();
        jBtn_Modifier = new javax.swing.JButton();
        jBtn_Supprimer = new javax.swing.JButton();
        jPanel_Personne = new javax.swing.JPanel();
        jPanel_InformationsPersonne = new javax.swing.JPanel();
        jTxTCode = new javax.swing.JTextField();
        jLab_Code = new javax.swing.JLabel();
        jLab_DateCreation = new javax.swing.JLabel();
        jTxT_DateCreation = new javax.swing.JTextField();
        jTxTNom = new javax.swing.JTextField();
        jLab_Nom = new javax.swing.JLabel();
        jTxT_Prenom = new javax.swing.JTextField();
        jLab_Prenom = new javax.swing.JLabel();
        jTXT_Adresse = new javax.swing.JTextField();
        jLab_Adresse = new javax.swing.JLabel();
        jTXT_Telephone = new javax.swing.JTextField();
        jTXT_Mobile = new javax.swing.JTextField();
        jLab_Mobile = new javax.swing.JLabel();
        jTXT_Email = new javax.swing.JTextField();
        jLab_Email = new javax.swing.JLabel();
        jLab_Telephone = new javax.swing.JLabel();
        jLab_CP = new javax.swing.JLabel();
        jTXT_CP = new javax.swing.JTextField();
        jTXT_Ville = new javax.swing.JTextField();
        jLab_Ville = new javax.swing.JLabel();
        jTXT_Pays = new javax.swing.JTextField();
        jLab_Pays = new javax.swing.JLabel();
        jCombo_Localite = new javax.swing.JComboBox<>(leModeleLocalite);
        jCombo_Pays = new javax.swing.JComboBox<>(leModelePays);
        jPanel_Form_Clients = new javax.swing.JPanel();
        jScrollPane_Clients = new javax.swing.JScrollPane();
        jTable_Clients = new javax.swing.JTable(leModeleClient);
        jLab_Carte = new javax.swing.JLabel();
        checkBox_Carte = new javax.swing.JCheckBox();
        jPanel_Form_Employes = new javax.swing.JPanel();
        jScrollPane_Employes = new javax.swing.JScrollPane();
        jTable_Employes = new javax.swing.JTable(leModeleEmploye);
        jLab_Salaire = new javax.swing.JLabel();
        jTxt_Salaire = new javax.swing.JTextField();
        jLab_Euro = new javax.swing.JLabel();
        jLabel_Poste = new javax.swing.JLabel();
        jComboBox_Poste = new javax.swing.JComboBox<>(leModelePoste);
        jPanel_Form_Produits = new javax.swing.JPanel();
        jPanel_CoordonneesProduit = new javax.swing.JPanel();
        jLab_CodeProduit = new javax.swing.JLabel();
        jTxT_CodeProduit = new javax.swing.JTextField();
        jTxT_NomProduit = new javax.swing.JTextField();
        jLab_NomProduit = new javax.swing.JLabel();
        jLab_Description = new javax.swing.JLabel();
        jTXT_CodeBarres = new javax.swing.JTextField();
        jLab_CodeBarres = new javax.swing.JLabel();
        jLab_Taux = new javax.swing.JLabel();
        jTXT_Taux = new javax.swing.JTextField();
        jLab_Prix = new javax.swing.JLabel();
        jTXT_Prix = new javax.swing.JTextField();
        jScrollPane_Description = new javax.swing.JScrollPane();
        jTextArea_Description = new javax.swing.JTextArea();
        jLabel_Quantite = new javax.swing.JLabel();
        jTxt_Quantite = new javax.swing.JTextField();
        jScrollPane_Produits = new javax.swing.JScrollPane();
        jTable_Produits = new javax.swing.JTable(leModeleProduit);
        jPanel_Form_Tickets = new javax.swing.JPanel();
        jScrollPane_Tickets = new javax.swing.JScrollPane();
        jTable_Tickets = new javax.swing.JTable(leModeleTicketCaisse);
        jScrollPane_LignesTickets = new javax.swing.JScrollPane();
        jTable_LignesTickets = new javax.swing.JTable(leModeleLigneTicketCaisse);
        jLabel_TitreLignesTicket = new javax.swing.JLabel();
        jBtn_Imprimer = new javax.swing.JButton();
        jButton_Solder = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Gestion du Supermarché");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLab_Titre.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLab_Titre.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Icones/client.png"))); // NOI18N
        jLab_Titre.setText("   Gestion des clients");
        jLab_Titre.setToolTipText("");
        getContentPane().add(jLab_Titre, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 70, 440, 40));

        jBtn_Quitter.setBackground(new java.awt.Color(23, 35, 51));
        jBtn_Quitter.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jBtn_Quitter.setForeground(new java.awt.Color(255, 255, 255));
        jBtn_Quitter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Icon_client/Quitter_prog.png"))); // NOI18N
        jBtn_Quitter.setText("Quitter");
        jBtn_Quitter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBtn_QuitterMouseClicked(evt);
            }
        });
        getContentPane().add(jBtn_Quitter, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 790, 220, 70));

        jBtn_Parametres.setBackground(new java.awt.Color(23, 35, 51));
        jBtn_Parametres.setForeground(new java.awt.Color(255, 255, 255));
        jBtn_Parametres.setText("Paramètres");
        jBtn_Parametres.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBtn_ParametresMouseClicked(evt);
            }
        });
        getContentPane().add(jBtn_Parametres, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 710, 220, 70));

        jBtn_Enregistrer.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jBtn_Enregistrer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Icon_client/save.png"))); // NOI18N
        jBtn_Enregistrer.setText(" Enregistrer");
        jBtn_Enregistrer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBtn_EnregistrerMouseClicked(evt);
            }
        });
        getContentPane().add(jBtn_Enregistrer, new org.netbeans.lib.awtextra.AbsoluteConstraints(1090, 790, 210, 80));
        jBtn_Enregistrer.setEnabled(false);

        jPanel_Etat.setBackground(new java.awt.Color(255, 255, 255));
        jPanel_Etat.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLab_Etat.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLab_Etat.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLab_Etat.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel_Etat.add(jLab_Etat, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 530, 60));

        getContentPane().add(jPanel_Etat, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 790, 530, 70));
        jPanel_Etat.setVisible(false);

        jPanel_Side.setBackground(new java.awt.Color(23, 35, 51));
        jPanel_Side.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel_Clients.setBackground(new java.awt.Color(41, 57, 80));
        jPanel_Clients.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLab_Clients.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLab_Clients.setForeground(new java.awt.Color(255, 255, 255));
        jLab_Clients.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLab_Clients.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Icones/client.png"))); // NOI18N
        jLab_Clients.setText(" Clients");
        jLab_Clients.setToolTipText("Gestion des clients");
        jPanel_Clients.add(jLab_Clients, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 240, 60));
        jLab_Clients.setName("clients");

        jPanel_Side.add(jPanel_Clients, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 100, 240, 60));

        jPanel_Employes.setBackground(new java.awt.Color(23, 35, 51));
        jPanel_Employes.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLab_Employes.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLab_Employes.setForeground(new java.awt.Color(255, 255, 255));
        jLab_Employes.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLab_Employes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Icones/employe.png"))); // NOI18N
        jLab_Employes.setText(" Employés");
        jPanel_Employes.add(jLab_Employes, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 240, 60));
        jLab_Employes.setName("employes");

        jPanel_Side.add(jPanel_Employes, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 190, 240, 60));

        jPanel_Produits.setBackground(new java.awt.Color(23, 35, 51));
        jPanel_Produits.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLab_Produits.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLab_Produits.setForeground(new java.awt.Color(255, 255, 255));
        jLab_Produits.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLab_Produits.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Icones/produits.png"))); // NOI18N
        jLab_Produits.setText(" Produits");
        jPanel_Produits.add(jLab_Produits, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 240, 60));
        jLab_Produits.setName("produits");

        jPanel_Side.add(jPanel_Produits, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 270, 240, 60));

        jPanel_Tickets.setBackground(new java.awt.Color(23, 35, 51));
        jPanel_Tickets.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLab_Tickets.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLab_Tickets.setForeground(new java.awt.Color(255, 255, 255));
        jLab_Tickets.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLab_Tickets.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Icones/tickets.png"))); // NOI18N
        jLab_Tickets.setText(" Tickets de Caisse");
        jPanel_Tickets.add(jLab_Tickets, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 240, 60));
        jLab_Tickets.setName("tickets");

        jPanel_Side.add(jPanel_Tickets, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 350, 240, 60));
        jPanel_Side.add(jSeparator_Panels, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 220, -1));

        jLabel_Profil.setBackground(new java.awt.Color(255, 255, 255));
        jLabel_Profil.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_Profil.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel_Profil.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Icones/user.png"))); // NOI18N
        jLabel_Profil.setToolTipText("Utilisateur connecté");
        jPanel_Side.add(jLabel_Profil, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, 200, 60));

        jBtn_Vendre.setBackground(new java.awt.Color(23, 35, 51));
        jBtn_Vendre.setFont(new java.awt.Font("Lucida Grande", 3, 14)); // NOI18N
        jBtn_Vendre.setForeground(new java.awt.Color(255, 255, 255));
        jBtn_Vendre.setText("Procéder à une vente");
        jBtn_Vendre.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jBtn_VendreMouseReleased(evt);
            }
        });
        jPanel_Side.add(jBtn_Vendre, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 450, 220, 80));
        jBtn_Vendre.getAccessibleContext().setAccessibleDescription("");

        jButton_ChiffresVentes.setBackground(new java.awt.Color(23, 35, 51));
        jButton_ChiffresVentes.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jButton_ChiffresVentes.setForeground(new java.awt.Color(255, 255, 255));
        jButton_ChiffresVentes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Icones/euro-24.png"))); // NOI18N
        jButton_ChiffresVentes.setText(" Chiffres de Ventes");
        jButton_ChiffresVentes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jButton_ChiffresVentesMouseReleased(evt);
            }
        });
        jPanel_Side.add(jButton_ChiffresVentes, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 580, 220, 80));

        getContentPane().add(jPanel_Side, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 240, 880));

        jPanel_Recherche.setBackground(new java.awt.Color(71, 120, 197));
        jPanel_Recherche.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        //jTXT_Recherche = RowFilterUtil.creerFiltreLigne(jTable_Clients);
        jTXT_Recherche.setBackground(new java.awt.Color(123, 156, 225));
        jTXT_Recherche.setToolTipText("Rechercher sur les colonnes Nom et Prénom ");
        jTXT_Recherche.setBorder(null);
        jTXT_Recherche.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTXT_RechercheKeyPressed(evt);
            }
        });
        jPanel_Recherche.add(jTXT_Recherche, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 20, 260, 20));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Icones/loupe.png"))); // NOI18N
        jPanel_Recherche.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1080, 20, 30, 20));

        getContentPane().add(jPanel_Recherche, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 0, 1140, 60));

        jPanel_AMS.setBackground(new java.awt.Color(255, 255, 255));
        jPanel_AMS.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel_AMS.setLayout(new java.awt.GridBagLayout());

        jBtn_Ajouter.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jBtn_Ajouter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Icon_client/add.png"))); // NOI18N
        jBtn_Ajouter.setText(" Ajouter un client ");
        jBtn_Ajouter.setMinimumSize(new java.awt.Dimension(200, 60));
        jBtn_Ajouter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBtn_AjouterMouseClicked(evt);
            }
        });
        jPanel_AMS.add(jBtn_Ajouter, new java.awt.GridBagConstraints());

        jBtn_Modifier.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jBtn_Modifier.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Icon_client/edit.png"))); // NOI18N
        jBtn_Modifier.setText(" Modifier un client ");
        jBtn_Modifier.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBtn_ModifierMouseClicked(evt);
            }
        });
        jPanel_AMS.add(jBtn_Modifier, new java.awt.GridBagConstraints());

        jBtn_Supprimer.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jBtn_Supprimer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Icon_client/remove.png"))); // NOI18N
        jBtn_Supprimer.setText(" Supprimer un client ");
        jBtn_Supprimer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jBtn_SupprimerMouseReleased(evt);
            }
        });
        jPanel_AMS.add(jBtn_Supprimer, new java.awt.GridBagConstraints());

        getContentPane().add(jPanel_AMS, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 340, 730, 60));

        jPanel_Personne.setBackground(new java.awt.Color(255, 255, 255));
        jPanel_Personne.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel_InformationsPersonne.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Informations sur la personne", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP));
        jPanel_InformationsPersonne.setOpaque(false);
        jPanel_InformationsPersonne.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTxTCode.setEditable(false);
        jPanel_InformationsPersonne.add(jTxTCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 28, 250, -1));

        jLab_Code.setText("Code");
        jPanel_InformationsPersonne.add(jLab_Code, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 70, 20));

        jLab_DateCreation.setText("Date d'inscription");
        jPanel_InformationsPersonne.add(jLab_DateCreation, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 38, 120, 20));

        jTxT_DateCreation.setEditable(false);
        jTxT_DateCreation.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel_InformationsPersonne.add(jTxT_DateCreation, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 34, 180, -1));

        jTxTNom.setEditable(false);
        jPanel_InformationsPersonne.add(jTxTNom, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 58, 250, -1));

        jLab_Nom.setText("Nom");
        jPanel_InformationsPersonne.add(jLab_Nom, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 50, 20));

        jTxT_Prenom.setEditable(false);
        jPanel_InformationsPersonne.add(jTxT_Prenom, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 70, 180, -1));

        jLab_Prenom.setText("Prénom");
        jPanel_InformationsPersonne.add(jLab_Prenom, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 72, 70, 20));

        jTXT_Adresse.setEditable(false);
        jPanel_InformationsPersonne.add(jTXT_Adresse, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 88, 250, -1));

        jLab_Adresse.setText("Adresse");
        jPanel_InformationsPersonne.add(jLab_Adresse, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 60, 20));

        jTXT_Telephone.setEditable(false);
        jPanel_InformationsPersonne.add(jTXT_Telephone, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 238, 250, -1));

        jTXT_Mobile.setEditable(false);
        jPanel_InformationsPersonne.add(jTXT_Mobile, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 208, 250, -1));

        jLab_Mobile.setText("Mobile");
        jPanel_InformationsPersonne.add(jLab_Mobile, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, 70, 20));

        jTXT_Email.setEditable(false);
        jPanel_InformationsPersonne.add(jTXT_Email, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 268, 250, -1));

        jLab_Email.setText("Email");
        jPanel_InformationsPersonne.add(jLab_Email, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 270, 60, 20));

        jLab_Telephone.setText("Tél. fixe");
        jPanel_InformationsPersonne.add(jLab_Telephone, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 240, 60, 20));

        jLab_CP.setText("Code postal");
        jPanel_InformationsPersonne.add(jLab_CP, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 90, 20));

        jTXT_CP.setEditable(false);
        jPanel_InformationsPersonne.add(jTXT_CP, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 118, 250, 30));

        jTXT_Ville.setEditable(false);
        jPanel_InformationsPersonne.add(jTXT_Ville, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 148, 250, 30));

        jLab_Ville.setText("Ville");
        jPanel_InformationsPersonne.add(jLab_Ville, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 50, 20));

        jTXT_Pays.setEditable(false);
        jPanel_InformationsPersonne.add(jTXT_Pays, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 178, 250, 30));

        jLab_Pays.setText("Pays");
        jPanel_InformationsPersonne.add(jLab_Pays, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, 70, 20));

        jCombo_Localite.setModel(leModeleLocalite);
        jCombo_Localite.setEnabled(false);
        jCombo_Localite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCombo_LocaliteActionPerformed(evt);
            }
        });
        jPanel_InformationsPersonne.add(jCombo_Localite, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 150, 190, 30));

        jCombo_Pays.setModel(leModelePays);
        jCombo_Pays.setEnabled(false);
        jCombo_Pays.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCombo_PaysActionPerformed(evt);
            }
        });
        jPanel_InformationsPersonne.add(jCombo_Pays, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 180, 190, 30));

        jPanel_Personne.add(jPanel_InformationsPersonne, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 360, 750, 350));

        jPanel_Form_Clients.setBackground(new java.awt.Color(255, 255, 255));
        jPanel_Form_Clients.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane_Clients.setViewportView(jTable_Clients);
        jTable_Clients.setRowHeight(jTable_Clients.getRowHeight() + 5);

        jPanel_Form_Clients.add(jScrollPane_Clients, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 1120, 210));

        jLab_Carte.setText("Carte fidélité");
        jPanel_Form_Clients.add(jLab_Carte, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 670, 90, 30));

        checkBox_Carte.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        checkBox_Carte.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        checkBox_Carte.setEnabled(false);
        checkBox_Carte.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                checkBox_CarteMouseClicked(evt);
            }
        });
        jPanel_Form_Clients.add(checkBox_Carte, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 670, 30, 30));

        jPanel_Personne.add(jPanel_Form_Clients, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1140, 820));

        jPanel_Form_Employes.setBackground(new java.awt.Color(255, 255, 255));
        jPanel_Form_Employes.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane_Employes.setViewportView(jTable_Employes);
        jTable_Employes.setRowHeight(jTable_Clients.getRowHeight() + 5);

        jPanel_Form_Employes.add(jScrollPane_Employes, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 1120, 210));

        jLab_Salaire.setText("Salaire de l'employé");
        jPanel_Form_Employes.add(jLab_Salaire, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 630, -1, -1));

        jTxt_Salaire.setEditable(false);
        jTxt_Salaire.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jPanel_Form_Employes.add(jTxt_Salaire, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 620, 170, -1));

        jLab_Euro.setText("€");
        jPanel_Form_Employes.add(jLab_Euro, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 630, -1, -1));

        jLabel_Poste.setText("Poste");
        jPanel_Form_Employes.add(jLabel_Poste, new org.netbeans.lib.awtextra.AbsoluteConstraints(204, 670, 50, 30));

        jComboBox_Poste.setModel(leModelePoste);
        jComboBox_Poste.setEnabled(false);
        jComboBox_Poste.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox_PosteItemStateChanged(evt);
            }
        });
        jPanel_Form_Employes.add(jComboBox_Poste, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 670, 170, 30));

        jPanel_Personne.add(jPanel_Form_Employes, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1140, 820));
        jPanel_Form_Employes.setVisible(false);

        getContentPane().add(jPanel_Personne, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 60, 1140, 820));

        jPanel_Form_Produits.setBackground(new java.awt.Color(255, 255, 255));
        jPanel_Form_Produits.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel_CoordonneesProduit.setBackground(new java.awt.Color(255, 255, 255));
        jPanel_CoordonneesProduit.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Informations sur le produit", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP));
        jPanel_CoordonneesProduit.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLab_CodeProduit.setText("Code");
        jPanel_CoordonneesProduit.add(jLab_CodeProduit, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 32, 60, 20));

        jTxT_CodeProduit.setEditable(false);
        jPanel_CoordonneesProduit.add(jTxT_CodeProduit, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 30, 190, 30));

        jTxT_NomProduit.setEditable(false);
        jPanel_CoordonneesProduit.add(jTxT_NomProduit, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 60, 370, 30));

        jLab_NomProduit.setText("Nom");
        jPanel_CoordonneesProduit.add(jLab_NomProduit, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 65, 50, 20));

        jLab_Description.setText("Description");
        jPanel_CoordonneesProduit.add(jLab_Description, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 90, 20));

        jTXT_CodeBarres.setEditable(false);
        jPanel_CoordonneesProduit.add(jTXT_CodeBarres, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 205, 370, 30));

        jLab_CodeBarres.setText("Code barres");
        jPanel_CoordonneesProduit.add(jLab_CodeBarres, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, 90, 20));

        jLab_Taux.setText("Taux TVA");
        jPanel_CoordonneesProduit.add(jLab_Taux, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 270, 80, 20));

        jTXT_Taux.setEditable(false);
        jTXT_Taux.setToolTipText("Exemple : 0.21 pour 21%");
        jPanel_CoordonneesProduit.add(jTXT_Taux, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 265, 160, 30));

        jLab_Prix.setText("Prix");
        jPanel_CoordonneesProduit.add(jLab_Prix, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 240, 70, 20));

        jTXT_Prix.setEditable(false);
        jPanel_CoordonneesProduit.add(jTXT_Prix, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 235, 160, 30));

        jTextArea_Description.setColumns(20);
        jTextArea_Description.setLineWrap(true);
        jTextArea_Description.setRows(5);
        jTextArea_Description.setTabSize(10);
        jTextArea_Description.setWrapStyleWord(true);
        jScrollPane_Description.setViewportView(jTextArea_Description);
        jTextArea_Description.setEditable(false);

        jPanel_CoordonneesProduit.add(jScrollPane_Description, new org.netbeans.lib.awtextra.AbsoluteConstraints(105, 100, 360, 100));

        jLabel_Quantite.setText("Quantité");
        jPanel_CoordonneesProduit.add(jLabel_Quantite, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 300, 80, 20));

        jTxt_Quantite.setEditable(false);
        jPanel_CoordonneesProduit.add(jTxt_Quantite, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 295, 160, 30));

        jPanel_Form_Produits.add(jPanel_CoordonneesProduit, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 360, 500, 340));

        jScrollPane_Produits.setViewportView(jTable_Produits);
        jTable_Produits.setRowHeight(jTable_Clients.getRowHeight() + 5);

        jPanel_Form_Produits.add(jScrollPane_Produits, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 1120, 210));

        getContentPane().add(jPanel_Form_Produits, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 60, 1140, 820));
        jPanel_Form_Produits.setVisible(false);

        jPanel_Form_Tickets.setBackground(new java.awt.Color(255, 255, 255));
        jPanel_Form_Tickets.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane_Tickets.setViewportView(jTable_Tickets);
        jTable_Tickets.setRowHeight(jTable_Tickets.getRowHeight()+15);

        jPanel_Form_Tickets.add(jScrollPane_Tickets, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 1120, 210));

        jScrollPane_LignesTickets.setViewportView(jTable_LignesTickets);

        jPanel_Form_Tickets.add(jScrollPane_LignesTickets, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 420, 1120, 250));

        jLabel_TitreLignesTicket.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel_TitreLignesTicket.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Icones/ligne.png"))); // NOI18N
        jLabel_TitreLignesTicket.setText("   Lignes du ticket de caisse");
        jLabel_TitreLignesTicket.setToolTipText("");
        jPanel_Form_Tickets.add(jLabel_TitreLignesTicket, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 360, 320, 50));

        jBtn_Imprimer.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jBtn_Imprimer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Icones/imprimer.png"))); // NOI18N
        jBtn_Imprimer.setText("Générer le ticket");
        jBtn_Imprimer.setToolTipText("Crée un document PDF");
        jBtn_Imprimer.setEnabled(false);
        jBtn_Imprimer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jBtn_ImprimerMouseReleased(evt);
            }
        });
        jPanel_Form_Tickets.add(jBtn_Imprimer, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 710, 230, 100));

        jButton_Solder.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jButton_Solder.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Icones/euro-24.png"))); // NOI18N
        jButton_Solder.setText("   Solder");
        jButton_Solder.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButton_Solder.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jButton_SolderMouseReleased(evt);
            }
        });
        jPanel_Form_Tickets.add(jButton_Solder, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 720, 220, 80));

        getContentPane().add(jPanel_Form_Tickets, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 60, 1140, 820));
        jPanel_Form_Tickets.setVisible(false);

        setSize(new java.awt.Dimension(1377, 904));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jBtn_EnregistrerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBtn_EnregistrerMouseClicked
        
        if (jBtn_Enregistrer.isEnabled()){
            String strDateMySQL;
            Date dtDate = new Date();
            boolean bCreation = false;
            boolean bModification = false;
            javax.swing.JTable laTable = new javax.swing.JTable();
            int newIndex = -1;
            
            if (ajout) {
                // En fonction de la section où l'on se trouve
                switch (mode){
                    case 'C' :  strDateMySQL= GestionsDates.chaineDateFRversEN(jTxT_DateCreation.getText());
                                try {
                                    dtDate = GestionsDates.chaineENversDateJava(strDateMySQL);          
                                } catch (ParseException ex) {
                                    Logger.getLogger(Fenetre_Gestion.class.getName()).log(Level.SEVERE, null, ex);
                                }
                                Client leClient = new Client();
                                
                                if (!Regex.estUnNom(jTxTNom.getText()) || jTxTNom.getText().isEmpty()){
                                    JOptionPane.showMessageDialog(null, "Nom incorrect !", "Erreur", JOptionPane.INFORMATION_MESSAGE); 
                                    return;
                                }
                                leClient.setNom(jTxTNom.getText());
                                
                                if (!Regex.estUnNom(jTxT_Prenom.getText()) || jTxT_Prenom.getText().isEmpty()){
                                    JOptionPane.showMessageDialog(null, "Prénom incorrect !", "Erreur", JOptionPane.INFORMATION_MESSAGE); 
                                    return;
                                }
                                leClient.setPrenom(jTxT_Prenom.getText());
                                leClient.setClient_fidele(checkBox_Carte.isSelected());
                                leClient.setDate_inscription(dtDate);
                                leClient.setAdresse(new Adresse(jTXT_Adresse.getText(), jTXT_CP.getText(), jTXT_Ville.getText(), jTXT_Pays.getText()));
                                leClient.setNum_telephone(jTXT_Telephone.getText());
                                leClient.setNum_mobile(jTXT_Mobile.getText());
                                leClient.setEmail(jTXT_Email.getText());

                                // Ajout dans la BD puis dans le modèle
                                bCreation = leModeleClient.creerMOD(this, leClient);
                                newIndex = leModeleClient.getRowByCode(leClient.getCode());
                                laTable = jTable_Clients;
                                break;
                                
                    case 'E' :  strDateMySQL= GestionsDates.chaineDateFRversEN(jTxT_DateCreation.getText());
                                try {
                                    dtDate = GestionsDates.chaineENversDateJava(strDateMySQL);          
                                } catch (ParseException ex) {
                                    Logger.getLogger(Fenetre_Gestion.class.getName()).log(Level.SEVERE, null, ex);
                                }
                                Employe lEmploye = new Employe(); 
                                
                                if (!Regex.estUnNom(jTxTNom.getText()) || jTxTNom.getText().isEmpty()){
                                    JOptionPane.showMessageDialog(null, "Nom incorrect !", "Erreur", JOptionPane.INFORMATION_MESSAGE); 
                                    return;
                                }
                                lEmploye.setNom(jTxTNom.getText());
                                
                                if (!Regex.estUnNom(jTxT_Prenom.getText()) || jTxT_Prenom.getText().isEmpty()){
                                    JOptionPane.showMessageDialog(null, "Prénom incorrect !", "Erreur", JOptionPane.INFORMATION_MESSAGE); 
                                    return;
                                }
                                lEmploye.setPrenom(jTxT_Prenom.getText());
                                
                                // Si aucun poste n'a été choisi
                                if ((leModelePoste.getSelectedString() == null)){
                                    JOptionPane.showMessageDialog(null, "Veuillez choisir un poste pour cet employé !", "Erreur", JOptionPane.INFORMATION_MESSAGE);
                                    return;
                                }
                                
                                Poste lePoste = new Poste();
                                lePoste.setDesignation(String.valueOf(leModelePoste.getSelectedString()));
                                lePoste.setId(leModelePoste.getIdByDesignation(lePoste.getDesignation()));                                                              
                                lEmploye.setPoste(lePoste);

                                lEmploye.setDate_embauche(dtDate);
                                lEmploye.setAdresse(new Adresse(jTXT_Adresse.getText(), jTXT_CP.getText(), jTXT_Ville.getText(), jTXT_Pays.getText()));
                                lEmploye.setNum_telephone(jTXT_Telephone.getText());
                                lEmploye.setNum_mobile(jTXT_Mobile.getText());
                                lEmploye.setEmail(jTXT_Email.getText());
                                // Si champs salaire vide
                                if (jTxt_Salaire.getText().isEmpty()) lEmploye.setSalaire(0);
                                else {
                                    try {
                                        lEmploye.setSalaire(Double.parseDouble(jTxt_Salaire.getText().replaceAll(",", ".")));
                                    } catch (NumberFormatException e){
                                        JOptionPane.showMessageDialog(null, "Veuillez renseigner un salaire au bon format !", "Erreur", JOptionPane.INFORMATION_MESSAGE);
                                        return;
                                    }
                                }

                                // Ajout dans la BD puis dans le modèle
                                bCreation = leModeleEmploye.creerMOD(this, lEmploye);
                                newIndex = leModeleEmploye.getRowByCode(lEmploye.getCode());
                                laTable = jTable_Employes;
                                break;
                                
                    case 'P' :  Produit leProduit = new Produit();
                                leProduit.setNom(jTxT_NomProduit.getText());
                                leProduit.setDesc_produit(jTextArea_Description.getText());
                                leProduit.setCode_barre(jTXT_CodeBarres.getText());
                                // On vérifie les champs monétaires
                                String erreur = "";
                                try {
                                    erreur = "un prix au bon format";
                                    leProduit.setPrix(Double.parseDouble(jTXT_Prix.getText().replaceAll(",", ".")));
                                    erreur = "un taux de TVA au bon format";
                                    leProduit.setTaux_tva(Double.parseDouble(jTXT_Taux.getText().replaceAll(",", ".")));
                                    erreur = "une quantité en entier";
                                    leProduit.setQuantite_produit(Integer.parseInt(jTxt_Quantite.getText()));
                                } catch(NumberFormatException e){
                                    JOptionPane.showMessageDialog(null, "Veuillez renseigner " + erreur + " !", "Erreur", JOptionPane.INFORMATION_MESSAGE);
                                    return;
                                }

                                // Ajout dans la BD puis dans le modèle
                                bCreation = leModeleProduit.creerMOD(this, leProduit);
                                newIndex = leModeleProduit.getRowByCode(leProduit.getCode());
                                laTable = jTable_Produits;
                                break;
                                
                    case 'T' :  break;
                }                
            } // Fin de l'ajout
            else if (modif){
                int modelRow;
                
                switch (mode){
                    case 'C' :  laTable = jTable_Clients;
                                
                                Client leClient = new Client(); 
                                leClient.setCode(Integer.parseInt(jTxTCode.getText()));
                                if (!Regex.estUnNom(jTxTNom.getText()) || jTxTNom.getText().isEmpty()){
                                    JOptionPane.showMessageDialog(null, "Nom incorrect !", "Erreur", JOptionPane.INFORMATION_MESSAGE); 
                                    return;
                                }
                                leClient.setNom(jTxTNom.getText());
                                
                                if (!Regex.estUnNom(jTxT_Prenom.getText()) || jTxT_Prenom.getText().isEmpty()){
                                    JOptionPane.showMessageDialog(null, "Prénom incorrect !", "Erreur", JOptionPane.INFORMATION_MESSAGE); 
                                    return;
                                }
                                leClient.setPrenom(jTxT_Prenom.getText());
                                leClient.setClient_fidele(checkBox_Carte.isSelected());
                                try {
                                    dtDate = GestionsDates.chaineENversDateJava(GestionsDates.chaineDateFRversEN(jTxT_DateCreation.getText()));
                                } catch (ParseException e){
                                    JOptionPane.showMessageDialog(null, "Date incorrecte ! Format accepté : 01/12/2020", "Erreur", JOptionPane.INFORMATION_MESSAGE);
                                    return;
                                }
                                
                                leClient.setDate_inscription(dtDate);
                                leClient.setAdresse(new Adresse(jTXT_Adresse.getText(), jTXT_CP.getText(), jTXT_Ville.getText(), jTXT_Pays.getText()));
                                leClient.setNum_telephone(jTXT_Telephone.getText());
                                leClient.setNum_mobile(jTXT_Mobile.getText());
                                leClient.setEmail(jTXT_Email.getText());
                                if (laTable.getRowCount() > 0) modelRow = laTable.convertRowIndexToModel(laTable.getSelectedRow());
                                else modelRow = laTable.getSelectedRow();
                                bModification = leModeleClient.modifierMOD(modelRow, modelRow, leClient);
                                newIndex = leModeleClient.getRowByCode(leClient.getCode());
                                
                                break;
                                
                    case 'E' :  laTable = jTable_Employes;
                                
                                Employe lEmploye = new Employe();
                                lEmploye.setCode(Integer.parseInt(jTxTCode.getText()));
                                if (!Regex.estUnNom(jTxTNom.getText()) || jTxTNom.getText().isEmpty()){
                                    JOptionPane.showMessageDialog(null, "Nom incorrect !", "Erreur", JOptionPane.INFORMATION_MESSAGE); 
                                    return;
                                }
                                lEmploye.setNom(jTxTNom.getText());
                                
                                if (!Regex.estUnNom(jTxT_Prenom.getText()) || jTxT_Prenom.getText().isEmpty()){
                                    JOptionPane.showMessageDialog(null, "Prénom incorrect !", "Erreur", JOptionPane.INFORMATION_MESSAGE); 
                                    return;
                                }
                                lEmploye.setPrenom(jTxT_Prenom.getText());
                                
                                // Si aucun poste n'a été choisi
                                if ((leModelePoste.getSelectedString() == null)){
                                    JOptionPane.showMessageDialog(null, "Veuillez choisir un poste pour cet employé !", "Erreur", JOptionPane.INFORMATION_MESSAGE);
                                    return;
                                }
                                
                                Poste lePoste = new Poste();       
                                lePoste.setDesignation(String.valueOf(leModelePoste.getSelectedString()));
                                lePoste.setId(leModelePoste.getIdByDesignation(lePoste.getDesignation()));                               
                                lEmploye.setPoste(lePoste);
                                try {
                                    dtDate = GestionsDates.chaineENversDateJava(GestionsDates.chaineDateFRversEN(jTxT_DateCreation.getText()));
                                } catch (ParseException e){
                                    JOptionPane.showMessageDialog(null, "Date incorrecte ! Format accepté : 01/12/2020", "Erreur", JOptionPane.INFORMATION_MESSAGE);
                                    return;
                                }
                                lEmploye.setDate_embauche(dtDate);
                                lEmploye.setAdresse(new Adresse(jTXT_Adresse.getText(), jTXT_CP.getText(), jTXT_Ville.getText(), jTXT_Pays.getText()));
                                lEmploye.setNum_telephone(jTXT_Telephone.getText());
                                lEmploye.setNum_mobile(jTXT_Mobile.getText());
                                lEmploye.setEmail(jTXT_Email.getText());
                                // Si champs salaire vide
                                if (jTxt_Salaire.getText().isEmpty()) lEmploye.setSalaire(0);
                                else {
                                    try {
                                        lEmploye.setSalaire(Double.parseDouble(jTxt_Salaire.getText().replaceAll(",", ".")));
                                    } catch (NumberFormatException e) {
                                        JOptionPane.showMessageDialog(null, "Veuillez renseigner un salaire au bon format !", "Erreur", JOptionPane.INFORMATION_MESSAGE);
                                        return;
                                    }
                                    
                                }
                                if (jTable_Employes.getRowCount() > 0) modelRow = jTable_Employes.convertRowIndexToModel(jTable_Employes.getSelectedRow());
                                else modelRow = jTable_Employes.getSelectedRow();
                                bModification = leModeleEmploye.modifierMOD(modelRow, modelRow, lEmploye);
                                newIndex = leModeleEmploye.getRowByCode(lEmploye.getCode());
                                
                                break;
                                
                    case 'P' :  laTable = jTable_Produits;
                                Produit leProduit = new Produit();
                                leProduit.setCode(Integer.parseInt(jTxT_CodeProduit.getText()));
                                leProduit.setNom(jTxT_NomProduit.getText());
                                leProduit.setDesc_produit(jTextArea_Description.getText());
                                leProduit.setCode_barre(jTXT_CodeBarres.getText());
                                
                                // On vérifie les champs monétaires
                                String erreur = "";
                                try {
                                    erreur = "un prix au bon format";
                                    leProduit.setPrix(Double.parseDouble(jTXT_Prix.getText().replaceAll(",", ".")));
                                    erreur = "un taux de TVA au bon format";
                                    leProduit.setTaux_tva(Double.parseDouble(jTXT_Taux.getText().replaceAll(",", ".")));
                                    erreur = "une quantité en entier";
                                    leProduit.setQuantite_produit(Integer.parseInt(jTxt_Quantite.getText()));
                                } catch(NumberFormatException e){
                                    JOptionPane.showMessageDialog(null, "Veuillez renseigner " + erreur + " !", "Erreur", JOptionPane.INFORMATION_MESSAGE);
                                    return;
                                }
                                
                                if (jTable_Produits.getRowCount() > 0) modelRow = jTable_Produits.convertRowIndexToModel(jTable_Produits.getSelectedRow());
                                else modelRow = jTable_Produits.getSelectedRow();
                                bModification = leModeleProduit.modifierMOD(modelRow, modelRow, leProduit);
                                newIndex = leModeleProduit.getRowByCode(leProduit.getCode());
                                
                                break;
                                
                    case 'T' :  break;
                }        
            }//fin modif
            
            if (bCreation || bModification) {
                jLab_Etat.setText(""); 
                jPanel_Etat.setVisible(false);
                jBtn_Enregistrer.setEnabled(false);
                setFormulaireEditable(false);
                ajout = false;
                modif = false;

                if (newIndex != -1) {
                    laTable.setRowSelectionInterval(newIndex, newIndex);
                    laTable.scrollRectToVisible(laTable.getCellRect(newIndex, 0, true));
                }
                else reinitFormulaire();

            }
        } 
    }//GEN-LAST:event_jBtn_EnregistrerMouseClicked

    private void jBtn_QuitterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBtn_QuitterMouseClicked
        System.exit(0);
    }//GEN-LAST:event_jBtn_QuitterMouseClicked

    private void jBtn_ParametresMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBtn_ParametresMouseClicked
        if (fenetre_Parametres != null) fenetre_Parametres.dispose();
        fenetre_Parametres = new Fenetre_Parametres(this.leModeleEmploye.getInstanceEmploye().getListeEmployesTriee());
        fenetre_Parametres.setVisible(true);
    }//GEN-LAST:event_jBtn_ParametresMouseClicked

    private void jCombo_LocaliteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCombo_LocaliteActionPerformed
        if (jCombo_Localite.getSelectedIndex() != -1){
            int index = jCombo_Localite.getSelectedIndex();
            String ville = leModeleLocalite.getElementAt(index).getNom();
            String codePostal = leModeleLocalite.getElementAt(index).getCodePostal();
            
            jTXT_Ville.setText(ville);
            jTXT_CP.setText(codePostal);
            // Pour automatiquement choisir la Belgique comme Pays
            // car les localités se trouvent en Belgique
            if (jCombo_Pays.getModel().getSize() > 0) jCombo_Pays.setSelectedIndex(1);
            enableSave();
        }  
    }//GEN-LAST:event_jCombo_LocaliteActionPerformed

    private void jCombo_PaysActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCombo_PaysActionPerformed
        if (jCombo_Pays.getSelectedIndex() != -1){
            int index = jCombo_Pays.getSelectedIndex();
            String nom = leModelePays.getElementAt(index).getNom();
            jTXT_Pays.setText(nom);
            enableSave();
        }
    }//GEN-LAST:event_jCombo_PaysActionPerformed

    private void jBtn_AjouterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBtn_AjouterMouseClicked
        
        if (modif){
            JOptionPane.showMessageDialog(null, "Veuillez d'abord terminer vos modifications.", "Erreur", JOptionPane.INFORMATION_MESSAGE);
        }
        else {  
            reinitFormulaire();
            // on met par défaut la date du jour
            Date dtDate = new Date();
            /*** gestion du format de la date ***/
            String strDate = GestionsDates.chaineDateENversFR(String.valueOf(GestionsDates.dateJavaEnDateSQL(dtDate)));
            jPanel_Etat.setVisible(true);
            switch (mode)
            {
                case 'C' :  jLab_Etat.setText("Création d'un nouveau client");
                            jTxT_DateCreation.setText(strDate);
                            break;
                            
                case 'E' :  jLab_Etat.setText("Création d'un nouvel employé");
                            jTxT_DateCreation.setText(strDate);
                            break;
                           
                case 'P' :  jLab_Etat.setText("Création d'un nouveau produit");                           
                            break;
                            
                case 'T' :  jLab_Etat.setText("Création d'un nouveau ticket");
                            break;
                
                default :   jPanel_Etat.setVisible(false);     
                            break;
            }

            ajout = true;
     
            setFormulaireEditable(true);
        }  
    }//GEN-LAST:event_jBtn_AjouterMouseClicked

    private void jBtn_ModifierMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBtn_ModifierMouseClicked
         
        JTable laTable = new JTable();
        int modelRow;
        String vCode = "";
        switch (mode)
        {
            case 'C' :  laTable = jTable_Clients;
                        break;

            case 'E' :  laTable = jTable_Employes;
                        break;

            case 'P' : laTable = jTable_Produits;
                        break;

            case 'T' :  laTable = jTable_Tickets;
                        break;
        }
        
        if (laTable.getRowCount() > 0) {
            modelRow = laTable.convertRowIndexToModel(laTable.getSelectedRow());
            vCode = String.valueOf(laTable.getModel().getValueAt(modelRow, 0));
        }
        else modelRow = laTable.getSelectedRow();
               
        if (ajout){
            JOptionPane.showMessageDialog(null, "Veuillez d'abord terminer vos ajouts.", "Erreur", JOptionPane.INFORMATION_MESSAGE);
        }
        else if (modelRow == -1) {
            JOptionPane.showMessageDialog(null, "Aucun élément selectionné.", "Erreur", JOptionPane.INFORMATION_MESSAGE);
        } 
        else if (mode == 'C' &&  vCode.equals("1")) {
            JOptionPane.showMessageDialog(null, "Le client générique ne peut être modifié !", "Erreur", JOptionPane.ERROR_MESSAGE);
        }
        else {
            jPanel_Etat.setVisible(true);
            switch (mode)
            {
                case 'C' :  jLab_Etat.setText("Modification d'un client");
                            break;

                case 'E' :  jLab_Etat.setText("Modification d'un employé");
                            break;

                case 'P' :  jLab_Etat.setText("Modification d'un produit");
                            break;

                case 'T' :  jLab_Etat.setText("Modification d'un ticket");
                            break;
                            
                default :   jPanel_Etat.setVisible(false);
                            break;
            }

            modif = true;
            setFormulaireEditable(true);
        }
    }//GEN-LAST:event_jBtn_ModifierMouseClicked

    private void jBtn_ImprimerMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBtn_ImprimerMouseReleased
        int index = jTable_Tickets.getSelectedRow();
        
        if(index != -1){
            TicketCaisse ticketActuel = leModeleTicketCaisse.getLesDonnees().get(index);            
            Generateur_PDF.generer(ticketActuel);
        }
    }//GEN-LAST:event_jBtn_ImprimerMouseReleased

    private void jBtn_VendreMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBtn_VendreMouseReleased
        if (ajout){
            JOptionPane.showMessageDialog(null, "Veuillez d'abord terminer vos ajouts.", "Erreur", JOptionPane.INFORMATION_MESSAGE);
        }
        else if (modif){
            JOptionPane.showMessageDialog(null, "Veuillez d'abord terminer vos modifications.", "Erreur", JOptionPane.INFORMATION_MESSAGE);
        }
        else {
            if (fenetre_Vente != null) fenetre_Vente.dispose();
            fenetre_Vente = new Fenetre_Vente(this, utilisateur.getlEmploye());
            fenetre_Vente.setVisible(true);
        }       
    }//GEN-LAST:event_jBtn_VendreMouseReleased

    private void jBtn_SupprimerMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBtn_SupprimerMouseReleased
        String vCode = "";
        int modelRow = -1;
        boolean supres = false;
        // Section dans laquelle on se trouve
        switch (mode)
        {
            case 'C' :  vCode = jTxTCode.getText();
                        if (jTable_Clients.getRowCount() > 0) modelRow = jTable_Clients.convertRowIndexToModel(jTable_Clients.getSelectedRow());
                        else modelRow = jTable_Clients.getSelectedRow();
                        break;
                        
            case 'E' :  vCode = jTxTCode.getText();
                        if (jTable_Employes.getRowCount() > 0) modelRow = jTable_Employes.convertRowIndexToModel(jTable_Employes.getSelectedRow());
                        else modelRow = jTable_Employes.getSelectedRow();
                        break;
            
            case 'P' :  vCode = jTxT_CodeProduit.getText();
                        if (jTable_Produits.getRowCount() > 0) modelRow = jTable_Produits.convertRowIndexToModel(jTable_Produits.getSelectedRow());
                        else modelRow = jTable_Produits.getSelectedRow();
                        break;
            
            case 'T' :  if (jTable_Tickets.getRowCount() > 0) {
                            modelRow = jTable_Tickets.convertRowIndexToModel(jTable_Tickets.getSelectedRow());                            
                        }
                
                        else modelRow = jTable_Tickets.getSelectedRow();
                        break;
        }
        
        if (ajout){
            JOptionPane.showMessageDialog(null, "Veuillez d'abord terminer vos ajouts.", "Erreur", JOptionPane.INFORMATION_MESSAGE);
        }
        else if (modif){
            JOptionPane.showMessageDialog(null, "Veuillez d'abord terminer vos modifications.", "Erreur", JOptionPane.INFORMATION_MESSAGE);
        }
        else if (modelRow == -1) {
            JOptionPane.showMessageDialog(null, "Aucun élément selectionné !", "Erreur", JOptionPane.INFORMATION_MESSAGE);
        }
        else if (mode == 'C' &&  vCode.equals("1")) {
            JOptionPane.showMessageDialog(null, "Le client générique ne peut être supprimé !", "Erreur", JOptionPane.ERROR_MESSAGE);
        }
        else if (mode == 'E' && vCode.equals(String.valueOf(this.utilisateur.getId()))) {
            JOptionPane.showMessageDialog(null, "Vous ne pouvez vous supprimer !", "Erreur", JOptionPane.ERROR_MESSAGE);
        }
        else {
            supp = true;
            int choix = JOptionPane.showOptionDialog(null, "Cet enregistrement sera supprimé, en êtes-vous sûr ?", "Suppression d'un enregistrement", 
                    JOptionPane.OK_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE, null, new String[] {"Oui", "Non"}, null);
            if (choix == 0){
                switch (mode)
                {
                    case 'C' :  supres = leModeleClient.supprimerMOD(modelRow, vCode);
                                jTable_Clients.clearSelection();
                                break;

                    case 'E' :  supres = leModeleEmploye.supprimerMOD(modelRow, vCode);
                                jTable_Employes.clearSelection();
                                break;

                    case 'P' :  supres = leModeleProduit.supprimerMOD(modelRow, vCode);
                                jTable_Produits.clearSelection();
                                break;

                    case 'T' :  vCode = String.valueOf(jTable_Tickets.getValueAt(modelRow, 0));
                                supres = leModeleTicketCaisse.supprimerMOD(modelRow, vCode);
                                jBtn_Imprimer.setEnabled(false);
                                jButton_Solder.setEnabled(false);
                                jTable_Tickets.clearSelection();
                                jTable_LignesTickets.clearSelection();
                                leModeleLigneTicketCaisse.clearModele();
                                break;
                }
                 
                if (supres){    
                    clearRecherche();
                    JOptionPane.showMessageDialog(null, "Enregistrement " + vCode + " supprimé !", "Suppression", JOptionPane.INFORMATION_MESSAGE);                                                  
                }
                reinitFormulaire();
            }
            supp = false;
        }//fin suppression
    }//GEN-LAST:event_jBtn_SupprimerMouseReleased

    private void jButton_SolderMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_SolderMouseReleased
        int index = jTable_Tickets.getSelectedRow();
        
        if(index != -1){
            if (!leModeleTicketCaisse.getLesDonnees().get(index).isStatutPaye()){
                boolean sortie = false;
                BigDecimal montantMax = leModeleTicketCaisse.getLesDonnees().get(index).
                        getMontantTotal().subtract(leModeleTicketCaisse.getLesDonnees().
                        get(index).getListePaiements().getMontantTotalPaiements()).setScale(2, RoundingMode.HALF_EVEN);
                
                JComboBox<ModePaiement> combo = new JComboBox<>(leModeleModePaiement);
                combo.setSelectedIndex(0);
                JTextField montant = new JTextField(10);
                
                String [] options = {"Valider", "Annuler"};
                Object[] obj = {combo, null, "Montant à solder : " , montant};
                
                while (sortie == false){
                    montant.setText(String.valueOf(montantMax));
                    sortie = true;
                    int optionSelectionne = JOptionPane.showOptionDialog(null, obj, "Solder un ticket", JOptionPane.DEFAULT_OPTION, JOptionPane.PLAIN_MESSAGE, null, options, options[0]);
                
                    if (optionSelectionne == 0){
                        
                        int mode = combo.getSelectedIndex();
                        try {
                            BigDecimal bd = new BigDecimal(montant.getText().replaceAll(",", "."));
                            if (bd.compareTo(montantMax) < 1 && bd.compareTo(BigDecimal.ZERO) > 0){
                                TicketCaisse leTicket = leModeleTicketCaisse.getLesDonnees().get(index);                   

                                Paiement lePaiement = new Paiement();
                                lePaiement.setTicket_caisse(leTicket);                               
    
                                ModePaiement leModePaiement = new ModePaiement(mode+1, String.valueOf(combo.getSelectedItem()));

                                lePaiement.setMode_paiement(leModePaiement); 
                                lePaiement.setDate_paiement(new Timestamp(System.currentTimeMillis()));
                                lePaiement.setMontant(bd.setScale(2, RoundingMode.HALF_EVEN)); 

                                leModeleTicketCaisse.getLesDonnees().get(index).getListePaiements().creerCRUD(lePaiement);
                                leModeleTicketCaisse.fireTableDataChanged();

                                if (leTicket.getMontantTotal().equals(leTicket.getListePaiements().getMontantTotalPaiements())) {
                                    leTicket.setStatutPaye(true);
                                    leModeleTicketCaisse.modifierMOD(index, index, leTicket);
                                    leModeleTicketCaisse.fireTableDataChanged();
                                    jButton_Solder.setEnabled(false);
                                    JOptionPane.showMessageDialog(null, "Soldé avec succès !", "Solde", JOptionPane.INFORMATION_MESSAGE);
                                }
                                else {
                                    JOptionPane.showMessageDialog(null, "Paiement ajouté !", "Paiement en plusieurs fois", JOptionPane.INFORMATION_MESSAGE);
                                }
                            }else {
                                sortie = false;
                                JOptionPane.showMessageDialog(null, "Montant trop élevé ou trop bas !", "Erreur", JOptionPane.INFORMATION_MESSAGE);
                            } 
                        } catch (NumberFormatException e){
                            sortie = false;
                            JOptionPane.showMessageDialog(null, "Veuillez entrer un montant !", "Erreur", JOptionPane.INFORMATION_MESSAGE);                            
                        }
                        
                                                  
                    }
                    else {
                        sortie = true;
                    }
                }                                               
            } 
            jTable_Tickets.setRowSelectionInterval(index, index);
        }
    }//GEN-LAST:event_jButton_SolderMouseReleased

    // On appuie sur ENTER pour faire une recherche selon la section
    private void jTXT_RechercheKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTXT_RechercheKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER){
            String recherche = this.jTXT_Recherche.getText();
            
            switch (mode){
                case 'C' :  leModeleClient.rechercherMOD(recherche);
                            break;
                case 'E' :  leModeleEmploye.rechercherMOD(recherche);
                            break;
                case 'P' :  leModeleProduit.rechercherMOD(recherche);
                            break;
                case 'T' :  leModeleTicketCaisse.rechercherMOD(recherche);
                            leModeleLigneTicketCaisse.getLesDonnees().clear();
                            leModeleLigneTicketCaisse.fireTableDataChanged();
                            break;
            }           
        }
    }//GEN-LAST:event_jTXT_RechercheKeyPressed

    private void jComboBox_PosteItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox_PosteItemStateChanged
        enableSave();
    }//GEN-LAST:event_jComboBox_PosteItemStateChanged

    private void jButton_ChiffresVentesMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_ChiffresVentesMouseReleased
        if (fenetre_ChiffresVentes != null) fenetre_ChiffresVentes.dispose();
        fenetre_ChiffresVentes = new Fenetre_ChiffresVentes(leModeleTicketCaisse);
        fenetre_ChiffresVentes.setVisible(true);
    }//GEN-LAST:event_jButton_ChiffresVentesMouseReleased

    private void checkBox_CarteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkBox_CarteMouseClicked
        enableSave();
    }//GEN-LAST:event_checkBox_CarteMouseClicked

    // Rends le formulaire éditable ou non
    private void setFormulaireEditable(boolean editable){

        // on met par défaut la date du jour
        Date dtDate = new Date();
        
        /*** gestion du format de la date ***/
        String strDate = GestionsDates.chaineDateENversFR(String.valueOf(GestionsDates.dateJavaEnDateSQL(dtDate)));
            
        switch (mode)
        {
            case 'C' :  jTable_Clients.setEnabled(!editable);  
                        jCombo_Localite.setEnabled(editable);
                        jCombo_Pays.setEnabled(editable);
                        jTxT_DateCreation.setEditable(editable);
                        checkBox_Carte.setEnabled(editable); 

                        jTxTNom.setEditable(editable);
                        jTxT_Prenom.setEditable(editable);
                        jTXT_Adresse.setEditable(editable);
                        jTXT_CP.setEditable(editable);
                        jTXT_Ville.setEditable(editable);
                        jTXT_Pays.setEditable(editable);
                        jTXT_Mobile.setEditable(editable);
                        jTXT_Telephone.setEditable(editable);
                        jTXT_Email.setEditable(editable);

                        if (editable) {
                            jTxTNom.requestFocus();
                        }
                        else {
                            jCombo_Localite.setSelectedIndex(-1);
                            jCombo_Pays.setSelectedIndex(-1);
                        }
                        break;

            case 'E' :  jTable_Employes.setEnabled(!editable);
                        jCombo_Localite.setEnabled(editable);
                        jCombo_Pays.setEnabled(editable);
                        jComboBox_Poste.setEnabled(editable);
                        jTxT_DateCreation.setEditable(editable);
                        jTxTNom.setEditable(editable);
                        jTxT_Prenom.setEditable(editable);
                        jTXT_Adresse.setEditable(editable);
                        jTXT_CP.setEditable(editable);
                        jTXT_Ville.setEditable(editable);
                        jTXT_Pays.setEditable(editable);
                        jTXT_Mobile.setEditable(editable);
                        jTXT_Telephone.setEditable(editable);
                        jTXT_Email.setEditable(editable); 
                        jTxt_Salaire.setEditable(editable);

                        if (editable) {
                            jTxTNom.requestFocus();
                        }
                        else {
                            jCombo_Localite.setSelectedIndex(-1);
                            jCombo_Pays.setSelectedIndex(-1);
                        }
                        break;

            case 'P' :  jTable_Produits.setEnabled(!editable);                                   
                        jTxT_NomProduit.setEditable(editable);

                        if (editable) jTxT_NomProduit.requestFocus();

                        jTextArea_Description.setEditable(editable);
                        jTXT_CodeBarres.setEditable(editable);
                        jTXT_Prix.setEditable(editable);
                        jTXT_Taux.setEditable(editable);
                        jTxt_Quantite.setEditable(editable);
                        break;

            case 'T' :  break;
        }       
    }
    
    // Réinitialise tous les champs du formulaire
    private void reinitFormulaire(){
        switch (mode)
        {
            case 'C' :  jTxTCode.setText("");
                        jTxT_DateCreation.setText("");
                        jTxTNom.setText("");
                        jTxT_Prenom.setText(""); 
                        jTXT_Adresse.setText("");
                        jTXT_CP.setText("");
                        jCombo_Localite.setSelectedIndex(-1);
                        jCombo_Pays.setSelectedIndex(-1);
                        jTXT_Ville.setText("");
                        jTXT_Pays.setText("");
                        jTXT_Mobile.setText("");
                        jTXT_Telephone.setText("");
                        checkBox_Carte.setSelected(false);
                        jTXT_Email.setText("");
                        break;
                        
            case 'E' :  jTxTCode.setText("");
                        jTxT_DateCreation.setText("");
                        jTxTNom.setText("");
                        jTxT_Prenom.setText(""); 
                        jTXT_Adresse.setText("");
                        jTXT_CP.setText("");
                        jCombo_Localite.setSelectedIndex(-1);
                        jCombo_Pays.setSelectedIndex(-1);
                        jTXT_Ville.setText("");
                        jTXT_Pays.setText("");
                        jTXT_Mobile.setText("");
                        jTXT_Telephone.setText("");
                        jTxt_Salaire.setText("");
                        jTXT_Email.setText("");
                        jComboBox_Poste.setSelectedIndex(-1);
                        break;
                        
            case 'P' :  jTxT_CodeProduit.setText("");
                        jTxT_NomProduit.setText("");
                        jTextArea_Description.setText("");
                        jTXT_CodeBarres.setText("");
                        jTXT_Prix.setText("");
                        jTXT_Taux.setText("");
                        jTxt_Quantite.setText("");
                        break;
                        
            case 'T' :  break;
        }
    }
    
    private String replaceNullStrings(Object obj){
       String resultat = String.valueOf(obj);
       return ((resultat.equals("null")) ? "" : resultat);
    }

    private void clearRecherche(){
        jTXT_Recherche.setText("");
    }

    void changerSection(String panel){
        switch(panel){
            case "clients" :    mode = 'C';
                                resetPanels();
                                jTable_Clients.clearSelection();
                                jPanel_Clients.setBackground(new Color(41,57,80));
                                jLab_Titre.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Icones/client.png")));
                                jLab_Titre.setText("   Gestion des clients");
                                jBtn_Ajouter.setText(" Ajouter un client ");
                                jBtn_Modifier.setText(" Modifier un client ");
                                jBtn_Supprimer.setText(" Supprimer un client ");

                                leModeleClient.getInstanceClient().getListeClientsTriee();
                                leModeleClient.fireTableDataChanged();
                                jPanel_Personne.setVisible(true);
                                jPanel_Form_Clients.setVisible(true);
                                jTXT_Recherche.setToolTipText("Recherche sur les colonnes Nom et Prénom");
                                break;
                                
            case "employes" :   mode = 'E';
                                resetPanels();
                                jTable_Employes.clearSelection();
                                jPanel_Employes.setBackground(new Color(41,57,80));
                                jLab_Titre.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Icones/employe.png")));
                                jLab_Titre.setText("   Gestion des employés");
                                jBtn_Ajouter.setText(" Ajouter un employé ");
                                jBtn_Modifier.setText(" Modifier un employé ");
                                jBtn_Supprimer.setText(" Supprimer un employé ");

                                leModeleEmploye.getInstanceEmploye().getListeEmployesTriee();
                                leModeleEmploye.fireTableDataChanged();
                                
                                jPanel_Personne.setVisible(true);
                                jPanel_Form_Employes.setVisible(true);
                                jTXT_Recherche.setToolTipText("Recherche sur les colonnes Nom et Prénom");
                                break;
                                
            case "produits" :   mode = 'P';
                                resetPanels();
                                jTable_Produits.clearSelection();
                                jPanel_Produits.setBackground(new Color(41,57,80));
                                jLab_Titre.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Icones/produits.png")));
                                jLab_Titre.setText("   Gestion des produits");
                                jBtn_Ajouter.setText(" Ajouter un produit ");
                                jBtn_Modifier.setText(" Modifier un produit ");
                                jBtn_Supprimer.setText(" Supprimer un produit ");

                                leModeleProduit.getInstanceProduit().getListeProduitsTriee();
                                leModeleProduit.fireTableDataChanged();
                                jPanel_Form_Produits.setVisible(true);
                                jTXT_Recherche.setToolTipText("Recherche sur les colonnes Nom, Code Barres et la description du produit");
                                break;
                                
            case "tickets" :    mode = 'T';
                                resetPanels();                             
                                jTable_Tickets.clearSelection();
                                jTable_LignesTickets.clearSelection();
                                jPanel_Tickets.setBackground(new Color(41,57,80));
                                jLab_Titre.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Icones/tickets.png")));
                                jLab_Titre.setText("   Gestion des tickets");
                                jBtn_Supprimer.setText(" Supprimer un ticket ");
                                jBtn_Ajouter.setVisible(false);
                                jBtn_Modifier.setVisible(false);
                                jBtn_Imprimer.setEnabled(false);
                                jBtn_Enregistrer.setVisible(false);
                                jButton_Solder.setEnabled(false);
                                
                                leModeleTicketCaisse.getInstanceTicket().getListeTicketsCaisseTriee();
                                leModeleTicketCaisse.fireTableDataChanged();

                                jPanel_Form_Tickets.setVisible(true);      
                                leModeleLigneTicketCaisse.getLesDonnees().clear();
                                leModeleLigneTicketCaisse.fireTableDataChanged();
                                jTXT_Recherche.setToolTipText("Recherche sur les colonnes Nom et Prénom des Clients et Employés");
                                
                                break;
        }       
    }
    
    void afficherLignesTicketCaisse(){
        int numLigne = jTable_Tickets.getSelectedRow();
        if (leModeleTicketCaisse.getLesDonnees().size() > 0)
        {
            // On récupère le ticket selectionné
            TicketCaisse ticketActuel = leModeleTicketCaisse.getLesDonnees().get(numLigne);
            // On fait passer la liste des lignes du ticket selectionné vers le modèle
            leModeleLigneTicketCaisse.setLesDonnees(ticketActuel.getListeLigneTicketCaisse());
            leModeleLigneTicketCaisse.fireTableDataChanged();

            jBtn_Imprimer.setEnabled(true);
            
            if (utilisateur.getDroits() != 0 && !ticketActuel.isStatutPaye()) jButton_Solder.setEnabled(true);
            else jButton_Solder.setEnabled(false);
        } 
        else 
        {
            jBtn_Imprimer.setEnabled(false);
            jButton_Solder.setVisible(false);
        }
    }
    
    private void resetPanels(){
        clearRecherche();

        if (utilisateur.getDroits() != 0){
            jBtn_Ajouter.setVisible(true);
            jBtn_Modifier.setVisible(true);  
            jBtn_Enregistrer.setVisible(true);
        } 
        
        JPanel[] panelsSide = new JPanel[]{jPanel_Clients, jPanel_Employes, jPanel_Produits, jPanel_Tickets};
        JPanel[] panelsMiddle = new JPanel[]{jPanel_Personne, jPanel_Form_Clients, jPanel_Form_Employes, jPanel_Form_Produits, jPanel_Form_Tickets, jPanel_Etat};
        
        for (JPanel panelsSide1 : panelsSide) {
            panelsSide1.setBackground(new Color(23,35,51));
        }
        
        for (JPanel panelsMiddle1 : panelsMiddle) {
            panelsMiddle1.setVisible(false);
        }     
        
        reinitFormulaire();
    }
    
    public void setjTxTCode (String Code){
        this.jTxTCode.setText(Code);
    }
    
    private void renderTables(){
        jTable_Clients.getColumnModel().getColumn(1).setCellRenderer(new RendererGras());
        jTable_Clients.getColumnModel().getColumn(3).setCellRenderer(new RendererBooleen());
        jTable_Clients.getColumnModel().getColumn(4).setCellRenderer(new RendererDate());
//        leModeleClient.addTableModelListener(jTable_Clients);
        
        jTable_Employes.getColumnModel().getColumn(1).setCellRenderer(new RendererGras());
        jTable_Employes.getColumnModel().getColumn(4).setCellRenderer(new RendererDate());
//        leModeleEmploye.addTableModelListener(jTable_Employes);
        
        jTable_Produits.getColumnModel().getColumn(1).setCellRenderer(new RendererGras());
        jTable_Produits.getColumnModel().getColumn(3).setCellRenderer(new RendererPrix());
        jTable_Produits.getColumnModel().getColumn(4).setCellRenderer(new RendererTauxTVA());
        jTable_Produits.getColumnModel().getColumn(5).setCellRenderer(new RendererNombre());
//        leModeleProduit.addTableModelListener(jTable_Produits);
        
        jTable_Tickets.getColumnModel().getColumn(2).setCellRenderer(new RendererGras());
        jTable_Tickets.getColumnModel().getColumn(4).setCellRenderer(new RendererStatutPaiement());
        jTable_Tickets.getColumnModel().getColumn(5).setCellRenderer(new RendererPrix());
        jTable_Tickets.getColumnModel().getColumn(6).setCellRenderer(new RendererPrix());
        jTable_Tickets.getColumnModel().getColumn(7).setCellRenderer(new RendererPrixMontantRestant());;
//        leModeleTicketCaisse.addTableModelListener(jTable_Tickets);

        jTable_LignesTickets.getColumnModel().getColumn(0).setCellRenderer(new RendererNombre());
        jTable_LignesTickets.getColumnModel().getColumn(2).setCellRenderer(new RendererPrix());
        jTable_LignesTickets.getColumnModel().getColumn(3).setCellRenderer(new RendererPrix());
//        leModeleLigneTicketCaisse.addTableModelListener(jTable_LignesTickets);
    }
    
    private void initInterfaceUser(){
        switch (utilisateur.getDroits())
        {
            case 0 :    jBtn_Ajouter.setVisible(false);
                        jBtn_Modifier.setVisible(false);
                        jBtn_Supprimer.setVisible(false);
                        jBtn_Parametres.setVisible(false);
                        jPanel_AMS.setBorder(null);
                        jBtn_Enregistrer.setVisible(false);
                        jBtn_Vendre.setVisible(false);
                        jButton_Solder.setVisible(false);
                        break;
                        
            case 1 :    jBtn_Supprimer.setVisible(false);
                        jBtn_Parametres.setVisible(false);
                        break;
        }
        
        jLabel_Profil.setText("  " + 
                utilisateur.getlEmploye().getNom().toUpperCase() + " " + 
                utilisateur.getlEmploye().getPrenom());
    }
    
    private void ajoutListenerJTextFields(){
        // On va redéfinir des méthodes du KeyListener de l'objet keyListener
        // Cet objet sera par la suite relié aux jTextFields des formulaires
        KeyListener keyListener = new KeyListener(){           
            @Override
            public void keyTyped(KeyEvent e) {
                enableSave();
            }

            @Override
            public void keyPressed(KeyEvent e) {}

            @Override
            public void keyReleased(KeyEvent e) {}
        }; 
        
        this.jTXT_Adresse.addKeyListener(keyListener);
        this.jTXT_CP.addKeyListener(keyListener);
        this.jTXT_CodeBarres.addKeyListener(keyListener);
        this.jTXT_Email.addKeyListener(keyListener);
        this.jTXT_Mobile.addKeyListener(keyListener);
        this.jTXT_Pays.addKeyListener(keyListener);
        this.jTXT_Prix.addKeyListener(keyListener);
        this.jTXT_Taux.addKeyListener(keyListener);
        this.jTXT_Telephone.addKeyListener(keyListener);
        this.jTXT_Ville.addKeyListener(keyListener);
        this.jTextArea_Description.addKeyListener(keyListener);  
        this.jTxTNom.addKeyListener(keyListener);
        this.jTxT_NomProduit.addKeyListener(keyListener);
        this.jTxT_DateCreation.addKeyListener(keyListener);
        this.jTxT_Prenom.addKeyListener(keyListener);
        this.jTxt_Quantite.addKeyListener(keyListener);
        this.jTxt_Salaire.addKeyListener(keyListener);   
    }
    
    private void enableSave(){
        if (ajout || modif) jBtn_Enregistrer.setEnabled(true);           
    }
    
    private void ajoutListenerJLabels(){
        // On va redéfinir des méthodes du MouseListener de l'objet mouseListener
        // Cet objet sera par la suite relié aux jButtons des formulaires
        MouseListener mouseListener = new MouseListener(){ 
            @Override
            public void mouseClicked(MouseEvent e) {}

            @Override
            public void mousePressed(MouseEvent e) { 
                // On envoie le nom du composant à la méthode
                // Pour pouvoir lui préciser vers quelle section se diriger
                clickOperation(e.getComponent().getName());
            }

            @Override
            public void mouseReleased(MouseEvent e) {}

            @Override
            public void mouseEntered(MouseEvent e) {}

            @Override
            public void mouseExited(MouseEvent e) {} 
            
            private void clickOperation(String section){
                if (ajout){
                    JOptionPane.showMessageDialog(null, "Veuillez d'abord terminer vos ajouts.", "Erreur", JOptionPane.INFORMATION_MESSAGE);
                }
                else if (modif){
                    JOptionPane.showMessageDialog(null, "Veuillez d'abord terminer vos modifications.", "Erreur", JOptionPane.INFORMATION_MESSAGE);
                }
                else {
                    changerSection(section);
                }
            }
        }; 
        
        jLab_Clients.addMouseListener(mouseListener);
        jLab_Employes.addMouseListener(mouseListener);
        jLab_Produits.addMouseListener(mouseListener);
        jLab_Tickets.addMouseListener(mouseListener);
    }

    private void ajoutListenerJTables(){
        // On va redéfinir des méthodes du MouseReleased de l'objet mouseReleased
        // Cet objet sera par la suite relié aux jTables des formulaires
        MouseListener mouseListener = new MouseListener(){ 
            @Override
            public void mouseClicked(MouseEvent e) {}
            
            @Override
            public void mousePressed(MouseEvent e) {}
            
            @Override
            public void mouseReleased(MouseEvent e) {
                clickOperation();        
            }
            
            @Override
            public void mouseEntered(MouseEvent e) {}
            
            @Override
            public void mouseExited(MouseEvent e) {}
            
            private void clickOperation(){
                if (!ajout && !modif && !supp){
                    int numLigne;
                    switch (mode){
                            case 'C' :  numLigne = jTable_Clients.getSelectedRow();
                                        Client leClient = leModeleClient.getLesDonnees().get(numLigne);
                                        jTxTCode.setText(replaceNullStrings(leClient.getCode()));
                                        jTxTNom.setText(replaceNullStrings(leClient.getNom()));
                                        jTxT_Prenom.setText(replaceNullStrings(leClient.getPrenom()));
                                        String stateCarte = replaceNullStrings(leClient.isClient_fidele());

                                        if (stateCarte.equals("true")){
                                            checkBox_Carte.setSelected(true);
                                        } else {
                                            checkBox_Carte.setSelected(false);
                                        }

                                        jTxT_DateCreation.setText(GestionsDates.dateEnChaineFR(leClient.getDate_inscription()));
                                        jTXT_Adresse.setText(replaceNullStrings(leClient.getAdresse().getRue()));
                                        jTXT_CP.setText(replaceNullStrings(leClient.getAdresse().getCode_postal()));
                                        jTXT_Ville.setText(replaceNullStrings(leClient.getAdresse().getLocalite()));
                                        jTXT_Pays.setText(replaceNullStrings(leClient.getAdresse().getPays()));
                                        jTXT_Telephone.setText(replaceNullStrings(leClient.getNum_telephone()));
                                        jTXT_Mobile.setText(replaceNullStrings(leClient.getNum_mobile()));
                                        jTXT_Email.setText(replaceNullStrings(leClient.getEmail()));
                                        break;   
                                        
                            case 'E' :  numLigne = jTable_Employes.getSelectedRow();
                                        Employe lEmploye = leModeleEmploye.getLesDonnees().get(numLigne);
                                        jTxTCode.setText(replaceNullStrings(lEmploye.getCode()));
                                        jTxTNom.setText(replaceNullStrings(lEmploye.getNom()));
                                        jTxT_Prenom.setText(replaceNullStrings(lEmploye.getPrenom()));
                                        leModelePoste.setSelectedItem(replaceNullStrings(lEmploye.getPoste()));
                                        jTxT_DateCreation.setText(GestionsDates.dateEnChaineFR(lEmploye.getDate_embauche()));
                                        jTXT_Adresse.setText(replaceNullStrings(lEmploye.getAdresse().getRue()));
                                        jTXT_CP.setText(replaceNullStrings(lEmploye.getAdresse().getCode_postal()));
                                        jTXT_Ville.setText(replaceNullStrings(lEmploye.getAdresse().getLocalite()));
                                        jTXT_Pays.setText(replaceNullStrings(lEmploye.getAdresse().getPays()));        
                                        jTXT_Telephone.setText(replaceNullStrings(lEmploye.getNum_telephone()));
                                        jTXT_Mobile.setText(replaceNullStrings(lEmploye.getNum_mobile()));
                                        jTxt_Salaire.setText(replaceNullStrings(lEmploye.getSalaire()));
                                        jTXT_Email.setText(replaceNullStrings(lEmploye.getEmail()));
                                        break;
                            
                            case 'P' :  numLigne = jTable_Produits.getSelectedRow();                            
                                        jTxT_CodeProduit.setText(replaceNullStrings(jTable_Produits.getValueAt(numLigne, 0)));
                                        jTxT_NomProduit.setText(replaceNullStrings(jTable_Produits.getValueAt(numLigne, 1)));
                                        jTextArea_Description.setText(replaceNullStrings(leModeleProduit.getLesDonnees().get(numLigne).getDesc_produit()));
                                        jTXT_CodeBarres.setText(replaceNullStrings(jTable_Produits.getValueAt(numLigne, 2)));
                                        jTXT_Prix.setText(replaceNullStrings(jTable_Produits.getValueAt(numLigne, 3)));
                                        jTXT_Taux.setText(replaceNullStrings(jTable_Produits.getValueAt(numLigne, 4)));
                                        jTxt_Quantite.setText(replaceNullStrings(jTable_Produits.getValueAt(numLigne, 5)));
                                        break;
                           
                            case 'T' :  afficherLignesTicketCaisse();
                                        break;
                    }
                }
            }
        };
        
        jTable_Clients.addMouseListener(mouseListener);
        jTable_Employes.addMouseListener(mouseListener);
        jTable_Produits.addMouseListener(mouseListener);
        jTable_Tickets.addMouseListener(mouseListener);
    }

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(Fenetre_Gestion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(Fenetre_Gestion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(Fenetre_Gestion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(Fenetre_Gestion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Fenetre_Gestion().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox checkBox_Carte;
    private javax.swing.JButton jBtn_Ajouter;
    private javax.swing.JButton jBtn_Enregistrer;
    private javax.swing.JButton jBtn_Imprimer;
    private javax.swing.JButton jBtn_Modifier;
    private javax.swing.JButton jBtn_Parametres;
    private javax.swing.JButton jBtn_Quitter;
    private javax.swing.JButton jBtn_Supprimer;
    private javax.swing.JButton jBtn_Vendre;
    private javax.swing.JButton jButton_ChiffresVentes;
    private javax.swing.JButton jButton_Solder;
    private javax.swing.JComboBox<String> jComboBox_Poste;
    private javax.swing.JComboBox<String> jCombo_Localite;
    private javax.swing.JComboBox<String> jCombo_Pays;
    private javax.swing.JLabel jLab_Adresse;
    private javax.swing.JLabel jLab_CP;
    private javax.swing.JLabel jLab_Carte;
    private javax.swing.JLabel jLab_Clients;
    private javax.swing.JLabel jLab_Code;
    private javax.swing.JLabel jLab_CodeBarres;
    private javax.swing.JLabel jLab_CodeProduit;
    private javax.swing.JLabel jLab_DateCreation;
    private javax.swing.JLabel jLab_Description;
    private javax.swing.JLabel jLab_Email;
    private javax.swing.JLabel jLab_Employes;
    private javax.swing.JLabel jLab_Etat;
    private javax.swing.JLabel jLab_Euro;
    private javax.swing.JLabel jLab_Mobile;
    private javax.swing.JLabel jLab_Nom;
    private javax.swing.JLabel jLab_NomProduit;
    private javax.swing.JLabel jLab_Pays;
    private javax.swing.JLabel jLab_Prenom;
    private javax.swing.JLabel jLab_Prix;
    private javax.swing.JLabel jLab_Produits;
    private javax.swing.JLabel jLab_Salaire;
    private javax.swing.JLabel jLab_Taux;
    private javax.swing.JLabel jLab_Telephone;
    private javax.swing.JLabel jLab_Tickets;
    private javax.swing.JLabel jLab_Titre;
    private javax.swing.JLabel jLab_Ville;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel_Poste;
    private javax.swing.JLabel jLabel_Profil;
    private javax.swing.JLabel jLabel_Quantite;
    private javax.swing.JLabel jLabel_TitreLignesTicket;
    private javax.swing.JPanel jPanel_AMS;
    private javax.swing.JPanel jPanel_Clients;
    private javax.swing.JPanel jPanel_CoordonneesProduit;
    private javax.swing.JPanel jPanel_Employes;
    private javax.swing.JPanel jPanel_Etat;
    private javax.swing.JPanel jPanel_Form_Clients;
    private javax.swing.JPanel jPanel_Form_Employes;
    private javax.swing.JPanel jPanel_Form_Produits;
    private javax.swing.JPanel jPanel_Form_Tickets;
    private javax.swing.JPanel jPanel_InformationsPersonne;
    private javax.swing.JPanel jPanel_Personne;
    private javax.swing.JPanel jPanel_Produits;
    private javax.swing.JPanel jPanel_Recherche;
    private javax.swing.JPanel jPanel_Side;
    private javax.swing.JPanel jPanel_Tickets;
    private javax.swing.JScrollPane jScrollPane_Clients;
    private javax.swing.JScrollPane jScrollPane_Description;
    private javax.swing.JScrollPane jScrollPane_Employes;
    private javax.swing.JScrollPane jScrollPane_LignesTickets;
    private javax.swing.JScrollPane jScrollPane_Produits;
    private javax.swing.JScrollPane jScrollPane_Tickets;
    private javax.swing.JSeparator jSeparator_Panels;
    private javax.swing.JTextField jTXT_Adresse;
    private javax.swing.JTextField jTXT_CP;
    private javax.swing.JTextField jTXT_CodeBarres;
    private javax.swing.JTextField jTXT_Email;
    private javax.swing.JTextField jTXT_Mobile;
    private javax.swing.JTextField jTXT_Pays;
    private javax.swing.JTextField jTXT_Prix;
    private javax.swing.JTextField jTXT_Recherche;
    private javax.swing.JTextField jTXT_Taux;
    private javax.swing.JTextField jTXT_Telephone;
    private javax.swing.JTextField jTXT_Ville;
    private javax.swing.JTable jTable_Clients;
    private javax.swing.JTable jTable_Employes;
    private javax.swing.JTable jTable_LignesTickets;
    private javax.swing.JTable jTable_Produits;
    javax.swing.JTable jTable_Tickets;
    private javax.swing.JTextArea jTextArea_Description;
    private javax.swing.JTextField jTxTCode;
    private javax.swing.JTextField jTxTNom;
    private javax.swing.JTextField jTxT_CodeProduit;
    private javax.swing.JTextField jTxT_DateCreation;
    private javax.swing.JTextField jTxT_NomProduit;
    private javax.swing.JTextField jTxT_Prenom;
    private javax.swing.JTextField jTxt_Quantite;
    private javax.swing.JTextField jTxt_Salaire;
    // End of variables declaration//GEN-END:variables
}
