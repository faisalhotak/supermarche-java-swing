package Vue;

import Controle.modele.ModeleTicketCaisse;
import Modele.LigneTicketCaisse;
import Modele.Paiement;
import Modele.TicketCaisse;
import java.awt.Color;
import java.awt.Font;
import java.math.BigDecimal;
import java.math.RoundingMode;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Comparator;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.annotations.CategoryTextAnnotation;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.CategoryLabelPositions;
import org.jfree.chart.labels.StandardCategoryItemLabelGenerator;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.renderer.category.CategoryItemRenderer;
import org.jfree.chart.renderer.category.GroupedStackedBarRenderer;
import org.jfree.data.KeyToGroupMap;
import org.jfree.data.category.DefaultCategoryDataset;

public class Fenetre_ChiffresVentes extends javax.swing.JFrame {

    private final DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
    private final ModeleTicketCaisse leModeleTicketCaisse;
    private boolean fireEvent = false;
    private HashMap<String, Integer> listeProduitsVendus = new HashMap<>();
    private HashMap<String, BigDecimal> listeModesPaiement = new HashMap<>();
    private final Map<Date, BigDecimal> listeChiffresJournalier = new HashMap<>();

    private Date dateChoisie = new Date();
    
    public Fenetre_ChiffresVentes(ModeleTicketCaisse leModeleTicketCaisse) {
        initComponents();
        this.leModeleTicketCaisse = leModeleTicketCaisse;
        
        Calendar c = Calendar.getInstance();
        BigDecimal montant;
        Date date;
        
        for (TicketCaisse tc : this.leModeleTicketCaisse.getLesDonnees()) 
        {
            montant = new BigDecimal(0.0);
            c.setTime(tc.getDateDeCreation());
            c.set(Calendar.HOUR_OF_DAY, 0);
            c.set(Calendar.MINUTE, 0);
            c.set(Calendar.SECOND, 0);
            c.set(Calendar.MILLISECOND, 0);

            date = c.getTime();
                
            for (Paiement p : tc.getListePaiements().getListePaiements()){
                montant = montant.add(p.getMontant()).setScale(2, RoundingMode.HALF_EVEN);
            }
   
            if (listeChiffresJournalier.containsKey(date)) 
            {
                BigDecimal nouveau = listeChiffresJournalier.get(date).add(montant).setScale(2, RoundingMode.HALF_EVEN);
                listeChiffresJournalier.replace(date, nouveau);
            }
            else 
            {
                listeChiffresJournalier.put(date, montant);
                jComboBox_Dates.addItem(dateFormat.format(date));
            }           
        }
        
        jComboBox_Dates.setSelectedIndex(-1);
        fireEvent = true;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel_Produits = new javax.swing.JPanel();
        jPanel_Ventes = new javax.swing.JPanel();
        jLabel_Titre = new javax.swing.JLabel();
        jComboBox_Dates = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Chiffres de Ventes");
        setBackground(new java.awt.Color(255, 255, 255));
        setBounds(new java.awt.Rectangle(0, 0, 0, 0));
        setPreferredSize(new java.awt.Dimension(1450, 900));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel_Produits.setBackground(new java.awt.Color(255, 255, 255));
        getContentPane().add(jPanel_Produits, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 680, 720));
        jPanel_Produits.setVisible(true);

        jPanel_Ventes.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel_VentesLayout = new javax.swing.GroupLayout(jPanel_Ventes);
        jPanel_Ventes.setLayout(jPanel_VentesLayout);
        jPanel_VentesLayout.setHorizontalGroup(
            jPanel_VentesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 680, Short.MAX_VALUE)
        );
        jPanel_VentesLayout.setVerticalGroup(
            jPanel_VentesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 720, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel_Ventes, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 110, 680, 720));
        jPanel_Ventes.setVisible(false);

        jLabel_Titre.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        jLabel_Titre.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_Titre.setText("Chiffres de Ventes");
        jLabel_Titre.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        getContentPane().add(jLabel_Titre, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 10, 450, 40));

        jComboBox_Dates.setFont(new java.awt.Font("Lucida Grande", 0, 12)); // NOI18N
        jComboBox_Dates.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_DatesActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBox_Dates, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 60, 130, 30));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Quantité de chaque produits vendus");
        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(135, 62, 430, 30));

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Montants reçus");
        jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(845, 62, 500, 30));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1577, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 890, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1480, 890));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox_DatesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_DatesActionPerformed
        if (fireEvent && jComboBox_Dates.getSelectedIndex() != -1){
            jPanel_Produits.setVisible(true);
            listeProduitsVendus = new HashMap<>();
        
            try {
                dateChoisie = dateFormat.parse(String.valueOf(jComboBox_Dates.getSelectedItem()));
            } catch (ParseException ex) {
                Logger.getLogger(Fenetre_ChiffresVentes.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            listeProduitsVendus = new HashMap<>();
            
            Calendar c = Calendar.getInstance();
            Date dt;

            for (TicketCaisse tc : this.leModeleTicketCaisse.getLesDonnees()) {           
                c.setTime(tc.getDateDeCreation());
                c.set(Calendar.HOUR_OF_DAY, 0);
                c.set(Calendar.MINUTE, 0);
                c.set(Calendar.SECOND, 0);
                c.set(Calendar.MILLISECOND, 0);           
                dt = c.getTime();

                if (dt.equals(dateChoisie)){
                    for (LigneTicketCaisse lignesTicketCaisse : tc.getListeLigneTicketCaisse()) {               
                        String nom = lignesTicketCaisse.getLeProduit().getNom();
                        int qtTotal = lignesTicketCaisse.getQuantiteAchetee();

                        if (listeProduitsVendus.containsKey(nom)) {
                            qtTotal += listeProduitsVendus.get(nom);
                            listeProduitsVendus.replace(nom, qtTotal);
                        }
                        else listeProduitsVendus.put(nom, qtTotal);
                    }           
                }   
            }
            
            listeProduitsVendus = sortByValueJava8Stream(listeProduitsVendus);
            
            DefaultCategoryDataset dcd = new DefaultCategoryDataset();

            for (String i : listeProduitsVendus.keySet()) {
                dcd.setValue(listeProduitsVendus.get(i), "Produit", i);
            }

            JFreeChart jchart = ChartFactory.createBarChart("", "", "Nombre de produits vendus", dcd, PlotOrientation.HORIZONTAL, true, true, false);

            CategoryPlot plot = jchart.getCategoryPlot();
            plot.setRangeGridlinePaint(Color.black);
            plot.getRenderer().setSeriesPaint(0, new Color(0, 125,0));

            CategoryAxis domainAxis = plot.getDomainAxis();

            domainAxis.setTickLabelFont(new Font("Verdana Helvetica Arial", Font.PLAIN, 9));
            domainAxis.setCategoryLabelPositions(CategoryLabelPositions.STANDARD);

            StandardCategoryItemLabelGenerator generator = new StandardCategoryItemLabelGenerator(); 

            CategoryItemRenderer renderer = ((CategoryPlot)jchart.getPlot()).getRenderer();
            renderer.setDefaultItemLabelGenerator(generator);
            renderer.setDefaultItemLabelsVisible(true);

            ChartPanel chartPanel = new ChartPanel(jchart);
            chartPanel.setPreferredSize(new java.awt.Dimension(jPanel_Produits.getWidth(), jPanel_Produits.getHeight()));
            chartPanel.setSize(new java.awt.Dimension(jPanel_Produits.getWidth(), jPanel_Produits.getHeight()));

            jPanel_Produits.removeAll();
            jPanel_Produits.add(chartPanel);
            jPanel_Produits.updateUI();

            
            /* 
            -----------------------------------------------------------------
            -----------------------------------------------------------------
            */
            
            
            jPanel_Ventes.setVisible(true);
            listeModesPaiement = new HashMap<>();
            listeModesPaiement.put("Espèces", new BigDecimal(0.0));
            listeModesPaiement.put("Bancontact", new BigDecimal(0.0));
            listeModesPaiement.put("MasterCard/Visa", new BigDecimal(0.0));
            
            BigDecimal especes      = new BigDecimal(0.0);
            BigDecimal bancontact   = new BigDecimal(0.0);
            BigDecimal mastercard   = new BigDecimal(0.0);

            for (TicketCaisse tc : this.leModeleTicketCaisse.getLesDonnees()) {
                c.setTime(tc.getDateDeCreation());
                c.set(Calendar.HOUR_OF_DAY, 0);
                c.set(Calendar.MINUTE, 0);
                c.set(Calendar.SECOND, 0);
                c.set(Calendar.MILLISECOND, 0);           
                dt = c.getTime();
                if (dt.equals(dateChoisie)){
                    for (Paiement p : tc.getListePaiements().getListePaiements()){
                        switch (p.getMode_paiement().getId()){
                            case 1 :    especes = especes.add(p.getMontant()).setScale(2, RoundingMode.HALF_EVEN);
                                        listeModesPaiement.replace("Espèces", especes);
                                        break;

                            case 2 :    bancontact = bancontact.add(p.getMontant()).setScale(2, RoundingMode.HALF_EVEN);
                                        listeModesPaiement.replace("Bancontact", bancontact);
                                        break;

                            case 3 :    mastercard = mastercard.add(p.getMontant()).setScale(2, RoundingMode.HALF_EVEN);
                                        listeModesPaiement.replace("MasterCard/Visa", mastercard);
                                        break;
                        }
                    }
                }
                
            } 

            DefaultCategoryDataset dcd3 = new DefaultCategoryDataset();

            dcd3.addValue(listeModesPaiement.get("Espèces"), "Espèces", "");
            dcd3.addValue(listeModesPaiement.get("Bancontact"), "Bancontact", "");
            dcd3.addValue(listeModesPaiement.get("MasterCard/Visa"), "MasterCard/Visa", "");

            BigDecimal toto = new BigDecimal(0.0);
            toto = toto.add(listeModesPaiement.get("Espèces"));
            toto = toto.add(listeModesPaiement.get("Bancontact"));
            toto = toto.add(listeModesPaiement.get("MasterCard/Visa"));

            JFreeChart jchart3 = ChartFactory.createStackedBarChart("", "", "Montants reçus (€)", dcd3, PlotOrientation.VERTICAL, true, true, false);

            CategoryPlot plot3 = jchart3.getCategoryPlot();
            plot3.setRangeGridlinePaint(Color.black);
            plot3.getRenderer().setSeriesPaint(0, new Color(0, 0,128));
            
            CategoryTextAnnotation cta = new CategoryTextAnnotation("Total : " + String.valueOf(toto), dcd3.getColumnKey(0), toto.doubleValue());
            plot3.addAnnotation(cta);

            CategoryAxis domainAxis3 = plot3.getDomainAxis();

            domainAxis3.setTickLabelFont(new Font("Verdana Helvetica Arial", Font.PLAIN, 12));
            domainAxis3.setCategoryLabelPositions(CategoryLabelPositions.DOWN_45);

            GroupedStackedBarRenderer renderer2 = new GroupedStackedBarRenderer();
            KeyToGroupMap map = new KeyToGroupMap("G1");
            map.mapKeyToGroup("Espèces", "G1");
            map.mapKeyToGroup("Bancontact", "G1");
            map.mapKeyToGroup("MasterCard/Visa", "G1");

            renderer2.setSeriesToGroupMap(map); 

            plot3.setRenderer(renderer2);

            StandardCategoryItemLabelGenerator generator3 = new StandardCategoryItemLabelGenerator();

            CategoryItemRenderer renderer3 = ((CategoryPlot)jchart3.getPlot()).getRenderer();
            renderer3.setDefaultItemLabelGenerator(generator3);
            renderer3.setDefaultItemLabelsVisible(true);


            ChartPanel chartPanel3 = new ChartPanel(jchart3);
            chartPanel3.setPreferredSize(new java.awt.Dimension(jPanel_Ventes.getWidth(), jPanel_Ventes.getHeight()));
            chartPanel3.setSize(new java.awt.Dimension(jPanel_Ventes.getWidth(), jPanel_Ventes.getHeight()));

            jPanel_Ventes.removeAll();
            jPanel_Ventes.add(chartPanel3);
            jPanel_Ventes.updateUI();     
        }
        
        
    }//GEN-LAST:event_jComboBox_DatesActionPerformed
     
    private  HashMap<String, Integer> sortByValueJava8Stream(HashMap<String, Integer> unSortedMap) 
    { 
        // Pour trier ASCENDANT les dates
//        LinkedHashMap<String, Integer> sortedMap = new LinkedHashMap<>();
//        unSortedMap.entrySet().stream().sorted(Map.Entry.comparingByValue())
//                .forEachOrdered(x -> sortedMap.put(x.getKey(), x.getValue()));
        // Pour trier DESCENDANT les dates
        LinkedHashMap<String, Integer> reverseSortedMap = new LinkedHashMap<>();
        unSortedMap.entrySet().stream().sorted(Map.Entry.comparingByValue(Comparator.reverseOrder()))
                .forEachOrdered(x -> reverseSortedMap.put(x.getKey(), x.getValue()));
         
        return reverseSortedMap;
    }
    
    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(Fenetre_ChiffresVentes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(Fenetre_ChiffresVentes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(Fenetre_ChiffresVentes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(Fenetre_ChiffresVentes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Fenetre_ChiffresVentes().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> jComboBox_Dates;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel_Titre;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel_Produits;
    private javax.swing.JPanel jPanel_Ventes;
    // End of variables declaration//GEN-END:variables
}
